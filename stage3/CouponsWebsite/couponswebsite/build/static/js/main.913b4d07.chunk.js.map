{"version":3,"sources":["reportWebVitals.ts","Components/mainLayout/footer/footer.tsx","Components/redux/AuthState.ts","Components/model/OnlineUser.ts","Components/redux/CompanyState.ts","Components/redux/CouponState.ts","Components/redux/CustomerState.ts","Components/redux/store.ts","Components/utils/Globals.ts","Components/utils/Notify.ts","Components/mainLayout/registerCustomer/registerCustomer.tsx","Components/mainLayout/signIn/signIn.tsx","Components/mainLayout/header/header.tsx","Components/adminComponents/loginAdmin/loginAdmin.tsx","Components/companyComponents/loginCompany/loginCompany.tsx","Components/customerComponents/loginCustomer/loginCustomer.tsx","Components/mainLayout/bannerImg/bannerImg.tsx","Components/utils/JWTAxios.ts","Components/mainComponent/singleCouponFun/singleCouponFun.tsx","Components/Axios/ListCouponsFun/ListCouponsFun.tsx","Components/mainLayout/topSellers/topSellers.tsx","Components/mainLayout/mainScreen/mainScreen.tsx","Components/mainLayout/Page404/Page404.tsx","Components/adminComponents/adminAside/adminAside.tsx","Components/adminComponents/adminOpenPage/adminOpenPage.tsx","Components/adminComponents/addCompany/addCompany.tsx","Components/adminComponents/updateCompany/updateCompany.tsx","Components/mainComponent/singleCompany/singleCompany.tsx","Components/adminComponents/companysList/companysList.tsx","Components/adminComponents/singleCouponRow/singleCouponRow.tsx","Components/adminComponents/couponCompanyList/couponCompanyList.tsx","Components/model/CompanyDetails.ts","Components/adminComponents/searchCompany/searchCompany.tsx","Components/adminComponents/addCustomer/addCustomer.tsx","Components/adminComponents/updateCustomer/updateCustomer.tsx","Components/mainComponent/singleCustomer/singleCustomer.tsx","Components/adminComponents/customersList/customersList.tsx","Components/model/CustomerDetails.ts","Components/adminComponents/searchCustomer/searchCustomer.tsx","Components/adminComponents/couponCustomerList/couponCustomerList.tsx","Components/adminComponents/adminRouting/adminRouting.tsx","Components/adminComponents/layoutAdminComp/layoutAdminComp.tsx","Components/companyComponents/companyAside/companyAside.tsx","Components/companyComponents/CompanyDetailsComp/CompanyDetailsComp.tsx","Components/companyComponents/companyOpenPage/companyOpenPage.tsx","Components/companyComponents/updateCoupon/updateCoupon.tsx","Components/companyComponents/singleCouponComp/singleCouponComp.tsx","Components/companyComponents/AddCoupon/AddCoupon.tsx","Components/companyComponents/couponsListCamp/couponsListCamp.tsx","Components/companyComponents/companyRouting/companyRouting.tsx","Components/companyComponents/layoutCompanyComp/layoutCompanyComp.tsx","Components/customerComponents/customerAside/customerAside.tsx","Components/customerComponents/couponsListCustomer/couponsListCustomer.tsx","Components/customerComponents/customerDetailsComp/customerDetailsComp.tsx","Components/customerComponents/customerOpenPage/customerOpenPage.tsx","Components/customerComponents/customerRouting/customerRouting.tsx","Components/customerComponents/layoutCustomer/layoutCustomer.tsx","Components/mainLayout/Routing/Routing.tsx","Components/mainLayout/layout/layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Footer","AuthActionType","className","OnlineUser","token","clientType","AuthState","loginUser","logoutUser","type","LogoutUser","payload","loginUserString","LoginUserString","CompanyActionType","CompanyState","companies","companyDownloadedAction","CompanyDownloaded","companyDeleteAction","id","CompanyDelete","companyCouponUpdateAction","CompanyCouponUpdate","CouponActionType","CouponState","coupons","couponDownloadedAction","CouponDownloaded","couponUpdateAction","coupon","CouponUpdate","CustomerActionType","CustomerState","customers","customerDownloadedAction","CustomerDownloaded","customerAddAction","customer","CustomerAdd","customerCouponUpdateAction","CustomerCouponUpdate","reducers","combineReducers","couponState","currentState","action","newState","CouponAdd","CouponDelete","authState","LoginUser","localStorage","setItem","removeItem","console","log","companyState","CompanyAdd","CompanyUpdate","customerState","CustomerUpdate","CustomerDelete","store","createStore","Globals","globals","urls","administrator","company","guest","general","notify","notification","Notyf","duration","position","x","y","message","this","success","error","RegisterCustomer","useForm","register","handleSubmit","errors","formState","myUrl","onSubmit","customerDetails","axios","post","response","config","headers","authorization","dispatch","catch","data","description","TextField","label","variant","required","value","minLength","maxLength","firstName","lastName","email","password","Button","SignIn","decoded","history","useHistory","useState","SignInUser","setUser","subscribe","getState","jwtDecode","sub","anchorEl","setAnchorEl","open","Boolean","undefined","src","onClick","push","exact","to","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","Header","LoginAdmin","setToken","useEffect","userDetails","LoginCompany","LoginCustomer","BannerImg","jwtAxios","create","interceptors","request","use","SingleCouponFun","props","imgUrl","couponDetails","image","width","height","title","price","amount","endDate","getItem","ListCouponsFun","arrayCouponDetails","map","item","TopSellers","fullCouponDetails","setData","couponsCompanyDetails","setCouponData","sortByCategory","selectedCategory","setCategory","setPrice","searchCoupon","onlineCategory","filter","category","length","get","Box","Slider","size","defaultValue","valueLabelDisplay","max","onChange","activeThumb","marks","sx","minWidth","FormControl","fullWidth","InputLabel","Select","labelId","target","MenuItem","MainScreen","Page404","AdminAside","AdminOpenPage","AddCompany","companyDetails","name","UpdateCompany","SingleCompany","delete","CompanysList","arrayCompanyDetails","myNumber","IconButton","style","fontSize","placeholder","args","Number","SingleCouponRow","companyID","startDate","CouponCompanyList","companyNum","useParams","arrayByCompany","CompanyDetails","SearchCompany","arrayOneCompany","AddCustomer","UpdateCustomer","SingleCustomer","customerDeleteAction","CustomersList","arrayCustomerDetails","CustomerDetails","SearchCustomer","customerNum","arrayOneCustomer","CouponCustomerList","customersDetails","setCoupns","arrayByCustomer","AdminRouting","path","component","LayoutAdminComp","CompanyAside","CompanyDetailsComp","oneCompanyArray","CompanyOpenPage","companyName","setName","UpdateCoupon","setStartDate","setEndDate","imgName","Input","styled","display","LocalizationProvider","dateAdapter","AdapterDateFns","Stack","spacing","DesktopDatePicker","minDate","Date","newDate","day","getDate","toString","mouth","getMonth","year","getFullYear","startDate1","renderInput","params","endDate1","direction","alignItems","htmlFor","accept","myEvent","file","files","Backendless","initApp","Files","upload","fileURLs","color","SingleCouponComp","React","anchorElm","setAnchorElm","handlePopoverClose","open1","Typography","onMouseEnter","onMouseLeave","pointerEvents","transformOrigin","disableRestoreFocus","p","couponDeleteAction","AddCoupon","companyId","CouponsListCamp","couponsArray","setCompanyId","CompanyRouting","LayoutCompanyComp","CustomerAside","CouponsListCustomer","couponsCustomerDetails","oneCustomerArray","CustomerDetailsComp","CustomerOpenPage","customerName","CustomerRouting","LayoutCustomer","Routing","from","Layout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.913b4d07.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./footer.css\";\n\nfunction Footer(): JSX.Element {\n    return (\n        <div className=\"footer\">\n\t\t\t\n        </div>\n    );\n}\n\nexport default Footer;\n","import OnlineUser from \"../model/OnlineUser\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport class AuthState{\r\n    public loginUser:OnlineUser = new OnlineUser();\r\n}\r\n\r\nexport enum AuthActionType{\r\n    LoginUser = \"loginUser\",\r\n    LogoutUser = \"LogoutUser\",\r\n    LoginUserString = \"LoginUserString\",\r\n}\r\n\r\nexport interface AuthAction{\r\n    type:AuthActionType,\r\n    payload?:any,\r\n}\r\n\r\nexport function loginUser(user: OnlineUser):AuthAction{\r\n    return {type: AuthActionType.LoginUser, payload: user}\r\n}\r\n\r\nexport function logoutUser():AuthAction{\r\n    return {type: AuthActionType.LogoutUser, payload: null}\r\n}\r\n\r\nexport function loginUserString(token:string):AuthAction{\r\n    return{type:AuthActionType.LoginUserString, payload:token}\r\n}\r\n\r\nexport function authReducer(currentState: AuthState = new AuthState(), action:AuthAction):AuthState{\r\n    const newState = {...currentState};\r\n\r\n    switch(action.type){\r\n        case AuthActionType.LoginUser:\r\n            newState.loginUser = action.payload;\r\n            //insert token with value of the token into local storage\r\n            localStorage.setItem(\"token\",action.payload)\r\n        break;\r\n\r\n        case AuthActionType.LogoutUser:\r\n            newState.loginUser = new OnlineUser();\r\n            //remove the token from local storage\r\n            localStorage.removeItem(\"token\");\r\n        break;\r\n\r\n            //get the string, extract the client type, and update the authState\r\n            //save the data to local storage\r\n        case AuthActionType.LoginUserString:\r\n            console.log(action);\r\n            newState.loginUser.token = action.payload;\r\n            localStorage.setItem(\"token\",newState.loginUser.token);\r\n        break;\r\n\r\n    }\r\n    return newState;\r\n}","class OnlineUser{\r\n    token: string = \"\";\r\n    clientType: string = \"\";\r\n}\r\n\r\nexport default OnlineUser;","import CompanyDetails from \"../model/CompanyDetails\";\r\nimport CouponDetails from \"../model/CouponDetails\";\r\n\r\nexport class CompanyState{\r\n    public companies: CompanyDetails[] = [];\r\n}\r\n\r\nexport enum CompanyActionType{\r\n    CompanyDownloaded = \"CompanyDownloaded\",\r\n    CompanyAdd = \"CompanyAdd\",\r\n    CompanyUpdate = \"CompanyUpdate\",\r\n    CompanyDelete = \"CompanyDelete\",\r\n    CompanyCouponUpdate = \"CompanyCouponUpdate\"\r\n}\r\n\r\nexport interface CompanyAction{\r\n    type: CompanyActionType,\r\n    payload?: any,\r\n}\r\n\r\n//action functions\r\nexport function companyDownloadedAction(companies: CompanyDetails[]):CompanyAction{\r\n    return{type: CompanyActionType.CompanyDownloaded, payload: companies}\r\n}\r\n\r\nexport function companyAddAction (company: CompanyDetails):CompanyAction{\r\n    return{type:CompanyActionType.CompanyAdd, payload: company}\r\n}\r\n\r\nexport function companyUpdateAction(company: CompanyDetails):CompanyAction{\r\n    return{ type: CompanyActionType.CompanyUpdate, payload: company}\r\n}\r\n\r\nexport function companyDeleteAction(id: number):CompanyAction{\r\n    return{ type:CompanyActionType.CompanyDelete, payload: id}\r\n}\r\n\r\nexport function companyCouponUpdateAction():CompanyAction{\r\n    return{ type:CompanyActionType.CompanyCouponUpdate}\r\n}\r\n\r\n//reducer\r\nexport function companyReducer(currentState: CompanyState = new CompanyState(), action: CompanyAction):CompanyState{\r\n    const newState = {...currentState};\r\n\r\n    switch (action.type){\r\n        case CompanyActionType.CompanyDownloaded:\r\n            newState.companies = action.payload;\r\n            break;\r\n\r\n        case CompanyActionType.CompanyAdd:\r\n            newState.companies = [];\r\n            break;\r\n\r\n        case CompanyActionType.CompanyUpdate:\r\n            newState.companies = [];\r\n            break;\r\n        \r\n        case CompanyActionType.CompanyDelete:\r\n            newState.companies = [];\r\n            break;\r\n        case CompanyActionType.CompanyCouponUpdate:\r\n            newState.companies = [];\r\n             break;\r\n    }\r\n\r\n    return newState;\r\n\r\n}","import CouponDetails from \"../model/CouponDetails\";\r\n\r\n//our redux state\r\nexport class CouponState{\r\n    public coupons:CouponDetails[] = [];\r\n}\r\n\r\n//action types\r\nexport enum CouponActionType{\r\n    CouponDownloaded = \"CouponDownloaded\",\r\n    CouponAdd = \"CouponAdd\",\r\n    CouponUpdate = \"CouponUpdate\",\r\n    CouponDelete = \"CouponDelete\",\r\n}\r\n\r\n//action decleration\r\nexport interface CouponAction{\r\n    type: CouponActionType,\r\n    payload?: any,\r\n}\r\n\r\n//action functions\r\nexport function couponDownloadedAction(coupons : CouponDetails[]):CouponAction{\r\n    return {type : CouponActionType.CouponDownloaded , payload: coupons}\r\n}\r\n\r\nexport function couponAddAction(coupon : CouponDetails):CouponAction{\r\n    return{type: CouponActionType.CouponAdd , payload: coupon}\r\n}\r\n\r\nexport function couponUpdateAction( coupon : CouponDetails):CouponAction{\r\n    return {type: CouponActionType.CouponUpdate , payload: coupon}\r\n}\r\n\r\nexport function couponDeleteAction(id: number): CouponAction{\r\n    return {type: CouponActionType.CouponDelete , payload: id}\r\n}\r\n\r\n//reducer\r\nexport function couponReducer(currentState: CouponState = new CouponState(), action: CouponAction):CouponState{\r\n    const newState = {...currentState};\r\n\r\n    switch (action.type){\r\n        case CouponActionType.CouponDownloaded:\r\n            newState.coupons = action.payload;\r\n            break;\r\n\r\n        case CouponActionType.CouponAdd:\r\n            newState.coupons =[];\r\n            break;\r\n\r\n        case CouponActionType.CouponUpdate:\r\n            newState.coupons =[];\r\n            break;\r\n        \r\n        case CouponActionType.CouponDelete:\r\n            newState.coupons =[];\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n\r\n}","import CustomerDetails from \"../model/CustomerDetails\";\r\n\r\nexport class CustomerState{\r\n    public customers: CustomerDetails[] = [];\r\n}\r\n\r\nexport enum CustomerActionType{\r\n    CustomerDownloaded = \"CustomerDownloaded\",\r\n    CustomerAdd = \"CustomerAdd\",\r\n    CustomerUpdate = \"CustomerUpdate\",\r\n    CustomerDelete = \"CustomerDelete\",\r\n    CustomerCouponUpdate = \"CustomerCouponUpdate\"\r\n}\r\n\r\nexport interface CustomerAction{\r\n    type: CustomerActionType,\r\n    payload?: any,\r\n}\r\n\r\n//action functions\r\nexport function customerDownloadedAction(customers: CustomerDetails[]):CustomerAction{\r\n    return{type: CustomerActionType.CustomerDownloaded, payload: customers}\r\n}\r\n\r\nexport function customerAddAction (customer: CustomerDetails):CustomerAction{\r\n    return{type:CustomerActionType.CustomerAdd, payload: customer}\r\n}\r\n\r\nexport function customerUpdateAction(customer: CustomerDetails):CustomerAction{\r\n    return{ type: CustomerActionType.CustomerUpdate, payload: customer}\r\n}\r\n\r\nexport function customerDeleteAction(id: number):CustomerAction{\r\n    return{ type:CustomerActionType.CustomerCouponUpdate, payload: id}\r\n}\r\n\r\nexport function customerCouponUpdateAction():CustomerAction{\r\n    return{ type: CustomerActionType.CustomerCouponUpdate}\r\n}\r\n\r\n//reducer\r\nexport function customerReducer(currentState: CustomerState = new CustomerState(), action: CustomerAction):CustomerState{\r\n    const newState = {...currentState};\r\n\r\n    switch (action.type){\r\n        case CustomerActionType.CustomerDownloaded:\r\n            newState.customers = action.payload;\r\n            break;\r\n\r\n        case CustomerActionType.CustomerAdd:\r\n            newState.customers = [];\r\n            break;\r\n\r\n        case CustomerActionType.CustomerUpdate:\r\n            newState.customers = [];\r\n            break;\r\n        \r\n        case CustomerActionType.CustomerDelete:\r\n            newState.customers = [];\r\n            break;\r\n        case CustomerActionType.CustomerCouponUpdate:\r\n            newState.customers = [];\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n\r\n}","\r\nimport { combineReducers, createStore } from \"redux\";\r\nimport { authReducer } from \"./AuthState\";\r\nimport { companyReducer } from \"./CompanyState\";\r\nimport { couponReducer } from \"./CouponState\";\r\nimport { customerReducer } from \"./CustomerState\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    couponState: couponReducer,\r\n    authState: authReducer,\r\n    companyState: companyReducer,\r\n    customerState: customerReducer,\r\n})\r\n\r\nconst store = createStore(reducers);\r\n\r\n\r\nexport default store;\r\n\r\n","class Globals{}\r\n\r\nclass DevelopmentGlobals extends Globals{\r\n    public urls = {\r\n        administrator : \"http://localhost:8080/admin/\",\r\n        //administrator : \"https://noa-coupon.herokuapp.com/admin/\",\r\n        company : \"http://localhost:8080/company/\",\r\n        customer : \"http://localhost:8080/customer/\",\r\n        guest : \"http://localhost:8080/guest/\",\r\n        general : \"/\"\r\n    }\r\n}\r\n\r\nclass ProductionGlobals extends Globals{\r\n    public urls = {\r\n        administrator : \"/admin/\",\r\n        company : \"/company/\",\r\n        customer : \"/customer/\",\r\n        guest : \"/guest/\",\r\n        general : \"/\"\r\n    }\r\n}\r\n\r\nconst globals = process.env.NODE_ENV === \"production\" ? new ProductionGlobals() : new DevelopmentGlobals();\r\n\r\nexport default globals;\r\n","import { Notyf } from \"notyf\";\r\n\r\n\r\n class Notify{\r\n    private notification = new Notyf({duration: 4000, position:{x: \"center\", y:\"center\"}});\r\n\r\n    public success(message:string){\r\n        this.notification.success(message);\r\n    }\r\n\r\n    public error (message:string){\r\n        this.notification.error(message);\r\n    }\r\n}\r\n\r\nconst notify = new Notify();\r\n\r\nexport default notify;","import { Button, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { customerAddAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport notify from \"../../utils/Notify\";\nimport \"./registerCustomer.css\";\n\nfunction RegisterCustomer(): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<CustomerDetails>();\n    const myUrl = globals.urls.guest + \"user/register\";\n    \n    function send(customerDetails:CustomerDetails){\n        console.log(customerDetails);\n        \n        axios.post(myUrl,customerDetails).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(customerAddAction(customerDetails));\n            notify.success(\"customer was add successfully!\");\n        }).catch(error=>{\n            console.log(error);\n            notify.error(error.response.data.description)});\n    }\n    return (\n        <div className=\"registerCustomer\">\n            <h3>Sign Up</h3>\n                <form onSubmit={handleSubmit(send)}>\n                    <TextField label=\"First name\" variant=\"outlined\"\n                        {...register(\"firstName\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 10, message:\"max length is 10 letters\"},\n                    })}/>\n                     <span> {errors.firstName && <p>{errors.firstName.message}</p>}</span>\n                    <br/><br/>\n\n                    <TextField label=\"Last name\" variant=\"outlined\"\n                        {...register(\"lastName\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 10, message:\"max length is 10 letters\"},\n                    })}/>\n                     <span> {errors.lastName && <p>{errors.lastName.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField label=\"email\" variant=\"outlined\"\n                        {...register(\"email\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 10,  message: \"min length is 10 letters\"},\n                            maxLength: {value: 40, message:\"max length is 40 letters\"},\n                    })}/>\n                     <span> {errors.email && <p>{errors.email.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField label=\"password\" variant=\"outlined\"\n                        {...register(\"password\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 4,  message: \"min length is 4 letters\"},\n                            maxLength: {value: 8, message:\"max length is 8 letters\"},\n                    })}/>\n                     <span> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                    <br/><br/>\n                  \n                    <Button id =\"sendButton\" type=\"submit\" >Send</Button>\n                   \n\n                </form>\n\t\t\t\n        </div>\n    );\n}\n\nexport default RegisterCustomer;\n","import jwtDecode from \"jwt-decode\";\nimport { useState } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport store from \"../../redux/store\";\nimport { logoutUser } from \"../../redux/AuthState\";\n//import Badge, { BadgeProps } from '@mui/material/Badge';\n//import { styled } from '@mui/material/styles';\nimport \"./signIn.css\";\nimport { Popover } from \"@mui/material\";\nimport RegisterCustomer from \"../registerCustomer/registerCustomer\";\nimport { customerCouponUpdateAction } from \"../../redux/CustomerState\";\nimport { companyCouponUpdateAction } from \"../../redux/CompanyState\";\n\n\nfunction SignIn(): JSX.Element {\n   let decoded: AuthenToken;\n   const logoNoa =\"https://backendlessappcontent.com/AE176C35-B9A0-07F6-FF0E-242CF8C99600/ACFDB970-70A6-45A1-9877-9716DEE3861D/files/img/logoNoa.png\"\n   const history = useHistory();\n\n   const[SignInUser,setUser]=useState<string>(\"guest\");\n\n   const logoClick =()=>{\n    history.push(\"/openPage\")\n   }\n\n   const handleClick =()=>{\n    store.dispatch(logoutUser());\n    store.dispatch(customerCouponUpdateAction());\n    store.dispatch(companyCouponUpdateAction());\n    history.push(\"/openPage\")\n   } \n  \n   store.subscribe(()=>{\n    console.log(\"start fancshion\")\n    if(store.getState().authState.loginUser.token === \"\"){\n        console.log(\"in if\")\n        setUser(\"guest\");   \n    }else{\n        console.log(\"in else\")\n    decoded = jwtDecode(store.getState().authState.loginUser.token);\n    setUser(decoded.sub)\n    }   \n    })\n    \n\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n    \n    const handleClickReg = (event: React.MouseEvent<HTMLButtonElement>) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n        setAnchorEl(null);\n     };\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    \n    return (\n        <div className=\"signIn\">\n             <img className=\"logo\" src={logoNoa} onClick={logoClick}/> \n            <div className=\"users\">\n                <nav>\n                    <NavLink className=\"loginNav\" exact to=\"/loginAdmin\">Admin</NavLink>\n                    |\n                    <NavLink className=\"loginNav\" exact to=\"/loginCompany\">Company</NavLink>\n                    |\n                    <NavLink className=\"loginNav\" exact to=\"/loginCustomer\">Customer</NavLink>\n                </nav>\n            </div>\n            <div className=\"user\">\n                    Hello {SignInUser}\n            </div>\n            <div className=\"singUpButton\">\n                <input className=\"regButton\" type=\"button\" value=\"SignUp\" onClick={handleClickReg} />\n            </div>\n            <Popover\n                className=\"popoverAdd\"\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n                >\n                <RegisterCustomer/>\n            </Popover>\n            <NavLink className=\"logoutNav\" exact to=\"/openPage\" onClick={handleClick}>|  Logout</NavLink>\n            {/*\n            <IconButton aria-label=\"cart\">\n                <StyledBadge badgeContent={4} color=\"secondary\">\n                <ShoppingCartIcon />\n                </StyledBadge>\n            </IconButton> \n            <img className=\"logo\" src={logoNoa} onClick={logoClick}/> */}\n        </div>\n    );\n}\n\nexport default SignIn\n\n","import SignIn from \"../signIn/signIn\";\nimport \"./header.css\";\n\nfunction Header(): JSX.Element {\n    return (\n        <div className=\"header\">\n\t\t\t<SignIn/>\n        </div>\n    );\n}\n\nexport default Header;\n","import { Button, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport UserDetails from \"../../model/UserDetails\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport store from \"../../redux/store\";\nimport \"./loginAdmin.css\";\nimport globals from \"../../utils/Globals\";\nimport notify from \"../../utils/Notify\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthenToken from \"../../model/AuthenToken\";\n\nfunction LoginAdmin(): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<UserDetails>();\n    const [jwtToken,setToken] = useState(\"User has no token, bad bad user !!!\");\n    const history = useHistory();\n    const myUrl = globals.urls.administrator + \"login\";\n    var decodedState: AuthenToken;\n\n    function send(userDetails:UserDetails){\n        userDetails.clientType = \"administrator\";\n        console.log(\"data arraived\")\n        console.log(userDetails.clientType);\n        axios.post<string>(myUrl,userDetails)\n        .then((response)=>{\n            console.log(response.data);\n            store.dispatch(loginUserString(response.data));\n            console.log(store.getState().authState.loginUser.clientType);\n            setToken(response.data);\n            history.push(\"/administrator\");\n            notify.success(\"you login successfully!\")\n\n        })\n\n        .catch(error=>{\n            notify.error(\"you don't have permisson!!!\")\n            setToken(\"Error in getting response from the server\");\n        })\n    }\n\n    useEffect(()=>{\n        if(store.getState().authState.loginUser.token !==\"\"){\n            decodedState =jwtDecode(store.getState().authState.loginUser.token);\n            if ( decodedState.clientType === \"administrator\"){\n                history.push(\"/administrator\");  \n            }\n        }\n    });\n\n\n    \n    return (\n        <div className=\"loginAdmin\">\n            <br/>\n            <form onSubmit={handleSubmit(send)}>\n            <div className=\"HeadLine\">Admin Login</div>\n            <br/><br/>\n\t\t\t<TextField  label=\"email\" variant=\"outlined\" \n            {...register(\"email\",{\n                required :{value: true, message : \"field is required\"},\n            })}/>\n             <span> {errors.email && <p>{errors.email.message}</p>}</span>\n            <br/><br/>\n            <TextField  label=\"password\" type=\"password\" variant=\"outlined\" \n            {...register(\"password\",{\n                required :{value: true, message : \"field is required\"},\n            })}/>\n            <span> {errors.password && <p>{errors.password.message}</p>}</span>\n            <br/><br/><br/>\n            <Button id=\"sendLoginButton\" className=\"Button\" type=\"submit\" >Send</Button>\n            </form>\n            {/*<div>\n                jwt token: <br/>\n                {jwtToken}\n            </div>\n            */}\n            <br/><br/>\n        </div>\n        \n    );\n}\n\nexport default LoginAdmin; \n","import { Button, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport UserDetails from \"../../model/UserDetails\";\nimport { loginUserString, logoutUser } from \"../../redux/AuthState\";\nimport { companyCouponUpdateAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport notify from \"../../utils/Notify\";\nimport \"./loginCompany.css\";\n\nfunction LoginCompany(): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<UserDetails>();\n    const [jwtToken,setToken] = useState(\"User has no token, bad bad user !!!\");\n    const history = useHistory();\n    const myUrl = globals.urls.company + \"login\";\n    var decodedState: AuthenToken;\n\n    function send(userDetails:UserDetails){\n        store.dispatch(logoutUser());\n        store.dispatch(companyCouponUpdateAction());\n        userDetails.clientType = \"company\";\n        console.log(\"data arraived\")\n        console.log(userDetails.clientType);\n        axios.post<string>(myUrl,userDetails)\n        .then((response)=>{\n            console.log(response.data);\n            store.dispatch(loginUserString(response.data))\n            console.log(store.getState().authState.loginUser.clientType)\n            setToken(response.data);\n            history.push(\"/company\");\n            notify.success(\"you login successfully!\")\n            \n        })\n        .catch(error=>{\n            notify.error(\"you don't have permisson!!!\")\n            setToken(\"Error in getting response from the server\");\n        })\n    }\n\n    useEffect(()=>{\n        if(store.getState().authState.loginUser.token !==\"\"){\n            decodedState =jwtDecode(store.getState().authState.loginUser.token);\n            if ( decodedState.clientType === \"company\"){\n                history.push(\"/company\");  \n            }\n        }\n    });\n   \n    \n    return (\n        <div className=\"loginCompany\">\n\t\t\t<br/>\n            <form onSubmit={handleSubmit(send)}>\n            <div className=\"HeadLine\">Company Login</div>\n            <br/><br/>\n\t\t\t<TextField  label=\"email\" variant=\"outlined\" \n            {...register(\"email\",{\n                required :{value: true, message : \"field is required\"},\n            })}/>\n             <span> {errors.email && <p>{errors.email.message}</p>}</span>\n            <br/><br/>\n            <TextField  label=\"password\" type=\"password\" variant=\"outlined\" \n            {...register(\"password\",{\n                required :{value: true, message : \"field is required\"},\n            })}/>\n            <span> {errors.password && <p>{errors.password.message}</p>}</span>\n            <br/><br/><br/>\n            <Button id=\"sendLoginButton\" className=\"Button\" type=\"submit\" >Send</Button>\n            </form>\n            {/*<div>\n                jwt token: <br/>\n                {jwtToken}\n            </div>\n            */}\n            <br/><br/>\n        </div>\n    );\n}\n\nexport default LoginCompany;\n","import { Button, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport UserDetails from \"../../model/UserDetails\";\nimport { loginUserString, logoutUser } from \"../../redux/AuthState\";\nimport { customerCouponUpdateAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport notify from \"../../utils/Notify\";\nimport \"./loginCustomer.css\";\n\nfunction LoginCustomer(): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<UserDetails>();\n    const [jwtToken,setToken] = useState(\"User has no token, bad bad user !!!\");\n    const history = useHistory();\n    const myUrl = globals.urls.customer + \"login\";\n    var decodedState: AuthenToken;\n\n    function send(userDetails:UserDetails){\n        store.dispatch(logoutUser());\n        store.dispatch(customerCouponUpdateAction());\n        userDetails.clientType = \"customer\";\n        console.log(\"data arraived\")\n        console.log(userDetails.clientType);\n        axios.post<string>(myUrl,userDetails)\n        .then((response)=>{\n            console.log(response.data);\n            store.dispatch(loginUserString(response.data))\n            console.log(store.getState().authState.loginUser.clientType)\n            setToken(response.data);\n            history.push(\"/customer\");\n            notify.success(\"you login successfully!\")\n            \n        })\n        .catch(error=>{\n            notify.error(\"you don't have permisson!!!\")\n            setToken(\"Error in getting response from the server\");\n        })\n    }\n\n    useEffect(()=>{\n        if(store.getState().authState.loginUser.token !==\"\"){\n            decodedState =jwtDecode(store.getState().authState.loginUser.token);\n            if ( decodedState.clientType === \"customer\"){\n                history.push(\"/customer\");  \n            }\n        }\n    });\n\n\n    return (\n        <div className=\"loginCustomer\">\n\t\t\t<br/>\n            <form onSubmit={handleSubmit(send)}>\n            <div className=\"HeadLine\">Customer Login</div>\n            <br/><br/>\n\t\t\t<TextField  label=\"email\" variant=\"outlined\" \n            {...register(\"email\",{\n                required :{value: true, message : \"field is required\"},\n            })}/>\n             <span> {errors.email && <p>{errors.email.message}</p>}</span>\n            <br/><br/>\n            <TextField  label=\"password\" type=\"password\" variant=\"outlined\" \n            {...register(\"password\",{\n                required :{value: true, message : \"field is required\"},\n            })}/>\n            <span> {errors.password && <p>{errors.password.message}</p>}</span>\n            <br/><br/><br/>\n            <Button id=\"sendLoginButton\" className=\"Button\" type=\"submit\" >Send</Button>\n            </form>\n            {/*<div>\n                jwt token: <br/>\n                {jwtToken}\n            </div>\n            */}\n            <br/><br/>\n        </div>\n    );\n}\n\nexport default LoginCustomer;\n","import \"./bannerImg.css\";\nfunction BannerImg(): JSX.Element {\n    return (\n        <div className=\"bannerImg\">\n            <div className=\"discription\">\n                <div className=\"buneerTitle\">\n                THE BEST <br/>\n                COUPONS WEBSITE<br/> \n                </div>\n                <div className=\"aboutUs\">\n                    This site is a place where customers can discover new experiences every day and local businesses thrive.<br/>\n                    Strong partnerships with great local businesses are at the very heart of us.<br/>\n                    These partnerships allow us to bring the best experiences and value to our customers,<br/> \n                    whether they’re looking for new things to try, taste, learn or do.\n                </div>\n            </div>\n            \n            \n        </div>\n    );\n}\n\nexport default BannerImg;\n","import axios from \"axios\";\r\nimport { loginUser, loginUserString } from \"../redux/AuthState\";\r\nimport store from \"../redux/store\";\r\n\r\n\r\n//יצירת אובייקט מוכן של\r\n//axios => singleTon\r\nconst jwtAxios = axios.create();\r\n\r\n//Request Interceptor - מה אנחנו רוצים לבצע מראש בעת שליחת בקשה לשרת\r\n/*\r\njwtAxios.interceptors.request.use(request=>{\r\n    request.headers = {\r\n        \"Authorization\" : store.getState().authState.loginUser.token,\r\n    }\r\n    return request;\r\n});\r\n\r\n\r\njwtAxios.interceptors.response.use(response =>{\r\n    store.dispatch(loginUser(response.headers.Authorization));\r\n    return response;\r\n})\r\n*/\r\njwtAxios.interceptors.request.use(request=>{\r\n    request.headers.authorization = \r\n         store.getState().authState.loginUser.token;\r\n    \r\n    return request;\r\n})\r\n\r\njwtAxios.interceptors.response.use(response =>{\r\n    store.dispatch(loginUserString(response.headers.authorization));\r\n    console.log(response);\r\n    return response;\r\n},)\r\n\r\n\r\nexport default jwtAxios;\r\n","import jwtDecode from \"jwt-decode\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { couponUpdateAction } from \"../../redux/CouponState\";\nimport { customerCouponUpdateAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./singleCouponFun.css\";\n\ninterface SingleCouponFunProps {\n    /*\n\ttitle:string,\n    endDate:string,\n    amount:number,\n    price:number,\n    image:string\n    */\n    couponDetails:CouponDetails;\n}\n\n\nfunction SingleCouponFun(props: SingleCouponFunProps): JSX.Element {\n    const imgUrl = \"https://backendlessappcontent.com/AE176C35-B9A0-07F6-FF0E-242CF8C99600/ACFDB970-70A6-45A1-9877-9716DEE3861D/files/img/\"+props.couponDetails.image;\n    const myUrl = globals.urls.customer + \"purchaseCoupon\";\n    var decoded: AuthenToken;\n\n  \n    \n    const handleClick =()=>{\n\n        if(store.getState().authState.loginUser.token === \"\"){\n            notify.error(\"You should sing up as customer first\");\n            return; \n        }else{\n                decoded = jwtDecode(localStorage.getItem(\"token\"));\n                if (decoded.clientType !== \"customer\"){\n                notify.error(\"You should sing up as customer first\");\n                return;\n                }\n            } \n\n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n        if (decoded.clientType !== \"customer\"){\n           notify.error(\"You should sing up as customer first\");\n           return;\n        }\n\n        jwtAxios.post(myUrl,props.couponDetails)\n            .then((response)=>{\n            store.dispatch(customerCouponUpdateAction());\n            store.dispatch(couponUpdateAction(props.couponDetails));\n            notify.success(\"coupon was purch successfully!\");\n            console.log(response);\n        }).catch(error=>{\n            console.log(error);\n            notify.error(error.response.data.description)});\n            \n        /*\n        store.dispatch(logoutUser());\n        history.push(\"/openPage\")\n        */\n    } \n\n\n    return (\n        <div className=\"singleCouponFun couponBox\">\n\t\t\t<img className =\"imgCoupon\" src={imgUrl} width=\"85%\" height=\"47%\"/>\n\t\t\t<hr/>\n            <h3>{props.couponDetails.title}</h3>\n            price: {props.couponDetails.price}$<br/>\n            only {props.couponDetails.amount} left!<br/>\n            end date: {props.couponDetails.endDate}<br/><br/>\n            <input className=\"buyButton\" type=\"button\" value=\"buy\" onClick={handleClick} />\n        </div>\n    );\n}\n\nexport default SingleCouponFun;\n","import SingleCouponFun from \"../../mainComponent/singleCouponFun/singleCouponFun\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport \"./ListCouponsFun.css\";\n\ninterface ListCouponsFunStateProps {\n\tarrayCouponDetails:CouponDetails[]\n}\n\nfunction ListCouponsFun(props: ListCouponsFunStateProps): JSX.Element {\n \n    return (\n        <div className=\"ListCouponsFun\">\n\t\t\t{props.arrayCouponDetails.map(item=><SingleCouponFun \n            key={item.id}\n            couponDetails={item}             \n             />)}\n        </div>\n    );\n}\n\nexport default ListCouponsFun;\n","import \"./topSellers.css\";\nimport ListCouponsFun from \"../../Axios/ListCouponsFun/ListCouponsFun\";\nimport { useEffect, useState } from \"react\";\nimport globals from \"../../utils/Globals\";\nimport store from \"../../redux/store\";\nimport axios from \"axios\";\nimport { couponDownloadedAction } from \"../../redux/CouponState\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { Box, FormControl, InputLabel, MenuItem, Select, SelectChangeEvent, Slider } from \"@mui/material\";\nimport notify from \"../../utils/Notify\";\n\nfunction TopSellers(): JSX.Element {\n    const myUrl = globals.urls.guest + \"coupons/all\";\n\n    const [fullCouponDetails,setData] = useState([]);\n    \n    const [couponsCompanyDetails,setCouponData] = useState([]);\n\n    var sortByCategory: CouponDetails[]=[];\n   \n    const [selectedCategory, setCategory] = useState('start');\n\n    const [price, setPrice] = useState<number | number[]>(5000);\n\n    const marks =[\n        {\n          value:0,\n          label:0,\n        },\n        {\n            value:5000,\n            label:5000,\n        },\n        {\n            value:2500,\n            label:\"price\",\n        },\n\n    ]\n\n    const handlePriceChange =(event: Event, value: number | number[], activeThumb: number) =>{\n        console.log(value);\n        console.log(activeThumb);\n        setPrice(value)\n        searchCoupon(selectedCategory,value);\n    }\n\n    const handleChange = (selectedCategory: SelectChangeEvent) => {\n        setCategory(selectedCategory.target.value as string);\n        searchCoupon(selectedCategory.target.value as string,price);\n    };\n\n\n    function searchCoupon(onlineCategory:string , price:number | number[]){\n\n        if(onlineCategory === \"all\"){\n            sortByCategory = fullCouponDetails.filter(function(item){\n                return (item.price<=price); \n            })\n        }else{\n            sortByCategory = fullCouponDetails.filter(function(item){\n                return (item.category === onlineCategory && item.price<=price); \n            })\n        }\n        /*\n        if(sortByCategory.length ===0 && onlineCategory !==\"all\" ){\n            notify.error(\"coupons were not found in the system !!!\");\n\n        }\n        */\n        setCouponData(sortByCategory);      \n    }\n\n    \n    useEffect(()=>{\n        if (store.getState().couponState.coupons.length===0){\n            axios.get(myUrl).then((response)=>{\n                setData(response.data);\n                store.dispatch(couponDownloadedAction(response.data))});\n        } else {\n            setData(store.getState().couponState.coupons);\n        }\n\n        if(store.getState().couponState.coupons.length===0){\n            axios.get(myUrl).then((response)=>{\n                console.log(response.data);\n                setData(response.data);\n                store.dispatch(couponDownloadedAction(response.data));\n                if(selectedCategory === \"start\"){\n                    setCouponData(store.getState().couponState.coupons);\n                    } \n               \n            }).catch(error=>{console.log(error)}); \n        }else{\n            console.log(\"in else\");\n            if(selectedCategory === \"start\"){\n                setCouponData(store.getState().couponState.coupons);\n            } \n           \n        }            \n    });\n    \n    return (\n        <div className=\"topSellers\"> \n\t\t\t<div className = \"header\">\n                Top Sellers\n            </div>\n            <div className=\"searchCouponButton\">\n                    <Box id = \"SliderBox\" width={300}>\n                        <Slider id=\"priceSlider\" \n                        size=\"small\"\n                        defaultValue={5000}\n                        aria-label=\"Small\"\n                        valueLabelDisplay=\"auto\"\n                        max={5000}\n                        onChange={handlePriceChange}\n                        marks={marks}\n                        />\n                    </Box>\n                    <Box id = \"categoryBox\" sx={{ minWidth: 120 }}>\n                    <FormControl id = \"categoryList\" fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n                        <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={selectedCategory}\n                        label=\"Search by Category\"\n                        onChange={handleChange}\n                        >\n                        <MenuItem value={\"all\"}>all</MenuItem>\n                        <MenuItem value={\"food\"}>food</MenuItem>\n                        <MenuItem value={\"electricity\"}>electricity</MenuItem>\n                        <MenuItem value={\"restaurant\"}>restaurant</MenuItem>\n                        <MenuItem value={\"vacation\"}>vacation</MenuItem>\n                        <MenuItem value={\"sport\"}>sport</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Box>\n                </div>\n            <br/><br/>\n             <ListCouponsFun arrayCouponDetails={couponsCompanyDetails} />\n        </div>\n    );\n}\n\nexport default TopSellers;\n","import BannerImg from \"../bannerImg/bannerImg\";\nimport TopSellers from \"../topSellers/topSellers\";\nimport \"./mainScreen.css\";\n\nfunction MainScreen(): JSX.Element {\n    return (\n        <div className=\"mainScreen\">\n            <header>\n                <BannerImg/>\n            </header>\n            <main>\n                <TopSellers/>\n            </main>\n\t\t\t\n        </div>\n    );\n}\n\nexport default MainScreen;\n","import \"./Page404.css\";\n//import page404woman from \"../../../Assetes/Images/page404woman.jpg\"\n\nfunction Page404(): JSX.Element {\n    const page404img = \"https://backendlessappcontent.com/AE176C35-B9A0-07F6-FF0E-242CF8C99600/ACFDB970-70A6-45A1-9877-9716DEE3861D/files/img/page404woman.jpg\"\n    return (\n        <div className=\"Page404\">\n\t\t\t<img src={page404img} width=\"40%\" height=\"40%\"/>\n        </div>\n    );\n}\n\nexport default Page404;\n","import { NavLink } from \"react-router-dom\";\nimport \"./adminAside.css\";\n\nfunction AdminAside(): JSX.Element {\n    return (\n        <div className=\"adminAside\">\n            <h1 className=\"title\">Admin</h1><br/>\n            <nav>\n                <NavLink className=\"adminNav\" exact to=\"/allCompanies\">Companies</NavLink>\n                |\n                <NavLink className=\"adminNav\" exact to=\"/allCustomers\">Customers</NavLink>\n               \n            </nav>\n        </div>\n    );\n}\n\nexport default AdminAside;\n","import \"./adminOpenPage.css\";\n\nfunction AdminOpenPage(): JSX.Element {\n    return (\n        <div className=\"adminOpenPage\">\n\t\t\t <div className=\"discriptionAdmin\">\n                <div className=\"buneerTitle\">\n                HELLO ADMINISTRATOR! <br/>\n                </div>\n                <div className=\"aboutUsAdmin\">\n                    You are in your personal page.<br/>\n                    Here you can see all the companies and customers that in system.<br/>\n                    To see all companies details press on companies tab,<br/>\n                    also you can add/update and delete any company you want.<br/>\n                    To see all customers details press on customers tab,<br/>\n                    also you can add/update and delete any customer you want.<br/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default AdminOpenPage;\n","import { Button, TextField } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport CompanyDetails from \"../../model/CompanyDetails\";\nimport { companyAddAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport \"./addCompany.css\";\nimport notify from \"../../utils/Notify\";\n\nfunction AddCompany(): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<CompanyDetails>();\n    const myUrl = globals.urls.administrator + \"addCompany\";\n   \n        \n    function send(companyDetails:CompanyDetails){\n        console.log(companyDetails);\n        \n        jwtAxios.post(myUrl,companyDetails).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(companyAddAction(companyDetails));\n            notify.success(\"company was add successfully!\");\n        }).catch(error=>{\n            console.log(error);\n            notify.error(error.response.data.description)});\n    }\n\n    return (\n        <div className=\"addCompany\">\n\t\t\t<h3>Add new company</h3>\n                <form onSubmit={handleSubmit(send)}>\n                    <TextField label=\"Company name\" variant=\"outlined\"\n                        {...register(\"name\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 40, message:\"max length is 40 letters\"},\n                    })}/>\n                     <span> {errors.name && <p>{errors.name.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField label=\"Company email\" variant=\"outlined\"\n                        {...register(\"email\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 10,  message: \"min length is 10 letters\"},\n                            maxLength: {value: 40, message:\"max length is 40 letters\"},\n                    })}/>\n                     <span> {errors.email && <p>{errors.email.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField label=\"Company password\" variant=\"outlined\"\n                        {...register(\"password\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 4,  message: \"min length is 4 letters\"},\n                            maxLength: {value: 8, message:\"max length is 8 letters\"},\n                    })}/>\n                     <span> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                    <br/><br/>\n                  \n                    <Button id =\"sendButton\" type=\"submit\" >Send</Button>\n                   \n\n                </form>\n        </div>\n    );\n}\n\nexport default AddCompany;\n","import { Button, TextField } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CompanyDetails from \"../../model/CompanyDetails\";\nimport { companyUpdateAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./updateCompany.css\";\ninterface updateCompanyprpos{\n    id:number,\n    name:string,\n}\n\nfunction UpdateCompany(props:updateCompanyprpos ): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<CompanyDetails>();\n    const myUrl = globals.urls.administrator + \"updateCompany\";\n    let history = useHistory();\n\n    function send(companyDetails:CompanyDetails){\n        companyDetails.id = props.id;\n        companyDetails.name = props.name;\n        console.log(companyDetails);\n        jwtAxios.post(myUrl,companyDetails).then((response)=>{\n            console.log(companyDetails);\n            console.log(response.config.headers.authorization);\n            store.dispatch(companyUpdateAction(companyDetails));\n            notify.success(\"company was update successfully!\");\n            history.push(\"/allCompanies\");\n        }).catch(error=>{console.log(error)});\n    }\n    \n    return (\n        <div className=\"updateCompany\">\n            <h3>update company</h3>\n                <form onSubmit={handleSubmit(send)}>\n                    <TextField label=\"Company email\" variant=\"outlined\"\n                        {...register(\"email\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 10,  message: \"min length is 10 letters\"},\n                            maxLength: {value: 40, message:\"min length is 40 letters\"},\n                    })}/>\n                    <span> {errors.email && <p>{errors.email.message}</p>}</span>\n                    <br/><br/>\n\n                    <TextField label=\"Company password\" variant=\"outlined\"\n                        {...register(\"password\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 4,  message: \"min length is 4 letters\"},\n                            maxLength: {value: 8, message:\"min length is 8 letters\"},\n                    })}/>\n                    <span> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                    <br/><br/>\n                   \n                    <Button id =\"sendButton\" type=\"submit\" >Send</Button>\n                    \n\n                </form>\n\t\t\t\n        </div>\n    );\n}\n\nexport default UpdateCompany;\n","import { Popover} from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport UpdateCompany from \"../../adminComponents/updateCompany/updateCompany\";\nimport { companyDeleteAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./singleCompany.css\";\n\ninterface SingleCompanyProps{\n    name:string,\n    email:string,\n    password:string,\n    id:number,\n}\n\nfunction SingleCompany(props: SingleCompanyProps): JSX.Element {\n    let history = useHistory();\n    const myUrl = globals.urls.administrator + \"deleteCompany/\";\n\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n     const id = open ? 'simple-popover' : undefined;\n\n    \n    \n    function showCoupons(){\n        history.push(\"/companyCoupnsList/\"+props.id);\n    }\n    \n    function deleteCompany(){\n        jwtAxios.delete(myUrl+props.id).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(companyDeleteAction(props.id));\n            notify.success(\"company was deleted successfully!\");\n            history.push(\"/allCompanies\");\n        }).catch(error=>{console.log(error)});  \n    }\n\n   \n    return (\n        <div className=\"singleCompany companyBox\">\n            <div className=\"companyColum\">\n            {props.id}\n            </div>\n            <div className=\"companyColum\">\n\t\t\t{props.name}\n            </div>\n            <div className=\"companyColum\">\n            {props.email}\n            </div>\n            <div className=\"companyColum\">\n            {props.password}\n            </div>\n            <div className=\"companyColum\">\n            <input className=\"listButton\" type=\"button\" value=\"Coupns\" onClick={showCoupons} />\n            </div>\n            <div className=\"companyColum\">\n            <input className=\"listButton\" type=\"button\" value=\"Update\" onClick={handleClick} />\n            </div>\n            <Popover\n                className=\"popoverUpdate\"\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n            >\n                <UpdateCompany\n                id={props.id}\n                name={props.name}\n                />\n            </Popover>\n            <div className=\"companyColum\">\n            <input className=\"listButton deleteButton\" type=\"button\" value=\"Delete\" onClick={deleteCompany} />\n            </div>\n        </div>\n    );\n}\n\nexport default SingleCompany;\n","import { SyntheticEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport SingleCompany from \"../../mainComponent/singleCompany/singleCompany\";\nimport { companyDownloadedAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport \"./companysList.css\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { IconButton, Popover } from \"@mui/material\";\nimport notify from \"../../utils/Notify\";\nimport AddCompany from \"../addCompany/addCompany\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport jwtDecode from \"jwt-decode\";\n\n\n\n\nfunction CompanysList(): JSX.Element {\n    const myUrl = globals.urls.administrator + \"companies/all\"\n\n    const [arrayCompanyDetails,setData] = useState([]);\n\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n\n    const history = useHistory();\n\n    let myNumber:number=0;\n\n    var decoded: AuthenToken;\n\n    function updateNumber(args:SyntheticEvent){\n        myNumber = Number((args.target as HTMLInputElement).value);\n        console.log(myNumber);\n    }\n\n    function searchCompany(){\n        \n        console.log(arrayCompanyDetails);\n        var arrayOneCompany = arrayCompanyDetails.filter(function(item){\n            return item.id === myNumber;\n        });\n\n        if(arrayOneCompany.length<1){\n            notify.error(\"company was not found !!!\");\n            return\n        }\n        history.push(\"/searchCompany/\"+myNumber);\n        \n        notify.success(\"company was found in the system !!!\");\n    }\n\n    \n    useEffect(()=>{\n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"administrator\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n        \n        console.log(store.getState().companyState);\n        if(store.getState().companyState.companies.length ===0){\n            jwtAxios.post(myUrl)\n                .then((response)=>{\n                setData(response.data);\n                store.dispatch(companyDownloadedAction(response.data))})\n                .catch(error=>console.log(error));\n        }else{\n            setData(store.getState().companyState.companies);\n        }\n        console.log(arrayCompanyDetails);\n    });\n\n\n    return (\n        <div className=\"companysList\">\n            <header>\n                <div className=\"searchCompButton\">\n                    <IconButton className=\"searchCompIcon\" onClick={searchCompany}>\n                    <SearchIcon style={{fontSize:25}}/>\n                    </IconButton>\n                    <input className =\"searchPlaceCompany\" type=\"number\" placeholder=\"company id\" onChange={updateNumber}/>\n                </div>\n                <div className=\"headerChartAdmin\">\n                    <div className=\"Colum\">\n                    Id number\n                    </div>\n                    <div className=\"Colum\">\n\t\t\t        Name:\n                    </div>\n                    <div className=\"Colum\">\n                    Email:\n                    </div>\n                    <div className=\"Colum\">\n                    Password\n                    </div>\n                </div>\n            </header>\n            <main>\n                {arrayCompanyDetails.map(item=><SingleCompany\n                key={item.email}\n                id={item.id}\n                name={item.name}\n                email={item.email}\n                password={item.password}\n                />)}\n                <br/><br/>\n            </main>\n            <footer>\n            <div className=\"addCompButton\">\n            <input className=\"addButton\" type=\"button\" value=\"Add Company\" onClick={handleClick} />\n            </div>\n            <Popover\n                className=\"popoverAdd\"\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'left',\n                }}\n            >\n                <AddCompany/>\n            </Popover>\n            </footer>\n        </div>\n    );\n}\n\nexport default CompanysList;\n","import \"./singleCouponRow.css\";\ninterface SingleCouponRowProps {\n\tid: number,\n    category:string,\n    title:string,\n    description:string,\n    startDate:string,\n    endDate:string,\n    amount:number,\n    price:number,\n    image:string,\n    companyID:number,\n}\n\nfunction SingleCouponRow(props: SingleCouponRowProps ): JSX.Element {\n    const imgUrl= \"https://backendlessappcontent.com/AE176C35-B9A0-07F6-FF0E-242CF8C99600/ACFDB970-70A6-45A1-9877-9716DEE3861D/files/img/\" + props.image;\n    return (\n         <div className=\"singleCouponRow\">\n           \n            <div className=\"text\">\n                <div className=\"title\">\n\t\t\t    {props.title}\n                </div>\n            <br/>\n            id number : {props.id}<br/>\n            company id: {props.companyID}<br/>\n            category : {props.category}<br/>\n            start date : {props.startDate}<br/>\n            end date : {props.endDate}<br/>\n            price  : {props.price}<br/>\n            amount : {props.amount}<br/>\n                <div className=\"description\">\n                description :{props.description}<br/>\n                </div><br/><br/><br/>\n                <hr/>\n            </div>\n\n            <div className=\"picture\">\n                <img src={imgUrl} width=\"300px\" height=\"225px\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default SingleCouponRow;\n","\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { couponDownloadedAction } from \"../../redux/CouponState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport SingleCouponRow from \"../singleCouponRow/singleCouponRow\";\nimport \"./couponCompanyList.css\";\n\ninterface CouponCompanyListProps{\n    companyId:number,\n    arrayCouponDetails:CouponDetails[]\n}\n\nfunction CouponCompanyList(props: CouponCompanyListProps ): JSX.Element {\n    const myUrl =globals.urls.guest + \"coupons/all\";\n\n    const{companyNum} = useParams<{companyNum?:string}>();\n\n    const [arrayCouponDetails,setData] = useState([]);\n\n    var arrayByCompany = arrayCouponDetails.filter(function(item){\n        return item.companyID == companyNum;\n    });\n    \n    useEffect(()=>{\n        console.log(\"coupns list strat\");\n        if (store.getState().couponState.coupons.length===0){\n            axios.get(myUrl).then((response)=>{\n                setData(response.data);\n                store.dispatch(couponDownloadedAction(response.data))})\n                .catch(error=>{console.log(error)});\n        } else {\n            setData(store.getState().couponState.coupons);\n        }\n\n        \n       \n        console.log(companyNum)\n        console.log(arrayByCompany)\n    });\n    return (\n        <div className=\"couponCompanyList\">\n            <header>\n\t\t\t<h1>list of coupons:</h1>\n            </header>\n            <main>\n            {arrayByCompany.map(item=><SingleCouponRow \n             key={item.id}\n             id={item.id}\n             category={item.category}\n             title={item.title} \n             endDate={item.endDate}\n             startDate={item.startDate} \n             amount={item.amount} \n             price={item.price} \n             image={item.image}\n             description={item.description}\n             companyID={item.companyID}              \n             />)} \n            </main>\n            <br/><br/>\n        </div>\n    );\n}\n\nexport default CouponCompanyList;\n","import CouponDetails from \"./CouponDetails\";\r\n\r\nclass CompanyDetails{\r\n    id: number =0;\r\n    name: string =\"\";\r\n    email: string = \"\";\r\n    password: string = \"\";\r\n    coupons: CouponDetails[] =[];\r\n}\r\nexport default CompanyDetails;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SingleCompany from \"../../mainComponent/singleCompany/singleCompany\";\nimport CompanyDetails from \"../../model/CompanyDetails\";\nimport { companyDownloadedAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./searchCompany.css\";\n\ninterface searchCompany{\n    arrayCompanyDetails:CompanyDetails[]\n}\n\nfunction SearchCompany(): JSX.Element {\n    const myUrl = globals.urls.administrator + \"companies/all\";\n    const{companyNum} = useParams<{companyNum?:string}>();\n    var [companyDetails,setData] = useState(new CompanyDetails());\n    let arrayCompanyDetails:CompanyDetails[]=[];\n\n   /*\n    function searchCompany(){\n        console.log(store.getState().companyState);\n        if(store.getState().companyState.companies.length===0){\n            jwtAxios.post(myUrl).then((response)=>{\n                arrayCompanyDetails = response.data \n                //setData(response.data);\n                store.dispatch(companyDownloadedAction(response.data))});\n        }else{\n            arrayCompanyDetails = store.getState().companyState.companies;\n        }\n\n        console.log(arrayCompanyDetails);\n        var arrayOneCompany = arrayCompanyDetails.filter(function(item){\n            return item.id == Number(companyNum);\n        });\n\n        if(arrayOneCompany.length<1){\n            notify.error(\"company was not found !!!\");\n            return\n        }\n\n        console.log(arrayOneCompany[0]);\n        setData(arrayOneCompany[0])\n        notify.success(\"company was found in the system !!!\");\n\n    }\n    */\n    \n    useEffect(()=>{\n        console.log(store.getState().companyState);\n        if(store.getState().companyState.companies.length===0){\n            jwtAxios.post(myUrl).then((response)=>{\n                arrayCompanyDetails = response.data \n                //setData(response.data);\n                store.dispatch(companyDownloadedAction(response.data))});\n        }else{\n            arrayCompanyDetails = store.getState().companyState.companies;\n        }\n\n        console.log(arrayCompanyDetails);\n        var arrayOneCompany = arrayCompanyDetails.filter(function(item){\n            return item.id == Number(companyNum);\n        });\n\n        if(arrayOneCompany.length<1){\n            notify.error(\"company was not found !!!\");\n            return\n        }\n\n        console.log(arrayOneCompany[0]);\n        setData(arrayOneCompany[0])\n\n        /*\n        console.log(store.getState().authState.loginUser.clientType)\n        \n        if (store.getState().authState.loginUser.clientType != \"administrator\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");\n            \n        }\n        */\n        \n    });\n\n    return (\n        <div className=\"searchCompany\">\n            {/*\n\t\t\t<h3>Search Company</h3><br/>\n            \n            <input type=\"number\" placeholder=\"please enter company id number\" onChange={updateNumber}/>\n            <input type=\"button\" value=\"Search\" onClick={searchCompany}/><hr/>\n            */}\n            <SingleCompany\n                key={companyDetails.email}\n                id={companyDetails.id}\n                name={companyDetails.name}\n                email={companyDetails.email}\n                password={companyDetails.password}\n                />\n        </div>\n    );\n}\n\nexport default SearchCompany;\n","import { Button, TextField } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { customerAddAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./addCustomer.css\";\n\nfunction AddCustomer(): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<CustomerDetails>();\n    const myUrl = globals.urls.administrator + \"addCustomer\";\n    \n    function send(customerDetails:CustomerDetails){\n        console.log(customerDetails);\n        \n        jwtAxios.post(myUrl,customerDetails).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(customerAddAction(customerDetails));\n            notify.success(\"customer was add successfully!\");\n        }).catch(error=>{\n            console.log(error);\n            notify.error(error.response.data.description)});\n    }\n    \n    return (\n        <div className=\"addCustomer\">\n            <h3>Add new customer</h3>\n                <form onSubmit={handleSubmit(send)}>\n                    <TextField label=\"First name\" variant=\"outlined\"\n                        {...register(\"firstName\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 10, message:\"max length is 10 letters\"},\n                    })}/>\n                     <span> {errors.firstName && <p>{errors.firstName.message}</p>}</span>\n                    <br/><br/>\n\n                    <TextField label=\"Last name\" variant=\"outlined\"\n                        {...register(\"lastName\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 10, message:\"max length is 10 letters\"},\n                    })}/>\n                     <span> {errors.lastName && <p>{errors.lastName.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField label=\"Customer email\" variant=\"outlined\"\n                        {...register(\"email\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 10,  message: \"min length is 10 letters\"},\n                            maxLength: {value: 40, message:\"max length is 40 letters\"},\n                    })}/>\n                     <span> {errors.email && <p>{errors.email.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField label=\"Customer password\" variant=\"outlined\"\n                        {...register(\"password\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 4,  message: \"min length is 4 letters\"},\n                            maxLength: {value: 8, message:\"max length is 8 letters\"},\n                    })}/>\n                     <span> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                    <br/><br/>\n                  \n                    <Button id =\"sendButton\" type=\"submit\" >Send</Button>\n                   \n\n                </form>\n\t\t\t\n        </div>\n    );\n}\n\nexport default AddCustomer;\n","import { Button, TextField } from \"@mui/material\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { customerUpdateAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./updateCustomer.css\";\ninterface updateCustomerPrpos{\n    id:number,\n}\n\nfunction UpdateCustomer(props:updateCustomerPrpos): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<CustomerDetails>();\n    const myUrl = globals.urls.administrator + \"updateCustomer\";\n    let history = useHistory();\n\n    function send(customerDetails:CustomerDetails){\n        customerDetails.id = props.id;\n        console.log(customerDetails);\n        jwtAxios.post(myUrl,customerDetails).then((response)=>{\n            console.log(customerDetails);\n            console.log(response.config.headers.authorization);\n            store.dispatch(customerUpdateAction(customerDetails));\n            notify.success(\"customer was update successfully!\");\n            history.push(\"/allCustomers\");\n        }).catch(error=>console.log(error));\n    }\n    return (\n        <div className=\"updateCustomer\">\n            <h3>update customer</h3>\n                <form onSubmit={handleSubmit(send)}>\n                    <TextField label=\"Customer first name\" variant=\"outlined\"\n                        {...register(\"firstName\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 10, message:\"min length is 10 letters\"},\n                    })}/>\n                     <span> {errors.firstName && <p>{errors.firstName.message}</p>}</span>\n                    <br/><br/>\n                    <TextField label=\"Customer last name\" variant=\"outlined\"\n                        {...register(\"lastName\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 10, message:\"min length is 10 letters\"},\n                    })}/>\n                     <span> {errors.lastName && <p>{errors.lastName.message}</p>}</span>\n                    <br/><br/>\n                     <TextField label=\"Customer email\" variant=\"outlined\"\n                        {...register(\"email\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 10,  message: \"min length is 10 letters\"},\n                            maxLength: {value: 40, message:\"min length is 40 letters\"},\n                    })}/>\n                     <span> {errors.email && <p>{errors.email.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField label=\"Customer password\" variant=\"outlined\"\n                        {...register(\"password\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 4,  message: \"min length is 4 letters\"},\n                            maxLength: {value: 8, message:\"min length is 8 letters\"},\n                    })}/>\n                     <span> {errors.password && <p>{errors.password.message}</p>}</span>\n\n                    <br/><br/>\n                   \n                        <Button id =\"sendButton\" type=\"submit\" >Send</Button>\n                    \n\n                </form>\n\t\t\t\n        </div>\n    );\n}\n\nexport default UpdateCustomer;\n","import { Popover } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UpdateCustomer from \"../../adminComponents/updateCustomer/updateCustomer\";\nimport { customerDeleteAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./singleCustomer.css\";\ninterface SingleCustomerProps{\n    lastName:string,\n    firstName:string,\n    email:string,\n    password:string,\n    id:number,\n}\n\nfunction SingleCustomer(props: SingleCustomerProps): JSX.Element {\n    let history = useHistory();\n    const myUrl = globals.urls.administrator + \"deleteCustomer/\";\n\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n     const id = open ? 'simple-popover' : undefined;\n\n    \n    \n    function showCoupons(){\n        history.push(\"/customerCoupnsList/\"+props.id);\n    }\n    \n    function deleteCustomer(){\n        jwtAxios.delete(myUrl+props.id).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(customerDeleteAction(props.id));\n            notify.success(\"customer was deleted successfully!\");\n            history.push(\"/allCustomers\");\n        }).catch(error=>console.log(error));\n    }\n\n   \n    return (\n        <div className=\"singleCustomer companyBox\">\n            <div className=\"custumerColum\">\n            {props.id}\n            </div>\n            <div className=\"custumerColum\">\n\t\t\t{props.firstName}\n            </div>\n            <div className=\"custumerColum\">\n\t\t\t{props.lastName}\n            </div>\n            <div className=\"custumerColum\">\n            {props.email}\n            </div>\n            <div className=\"custumerColum\">\n            {props.password}\n            </div>\n            <div className=\"custumerColum\">\n            <input className=\"listButton\" type=\"button\" value=\"Coupns\" onClick={showCoupons} />\n            </div>\n            <div className=\"companyColum\">\n            <input className=\"listButton\" type=\"button\" value=\"Update\" onClick={handleClick} />\n            </div>\n            <Popover\n                className=\"popoverUpdate\"\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n            >\n                <UpdateCustomer\n                id={props.id}\n                />\n            </Popover>\n            <div className=\"companyColum\">\n            <input className=\"listButton deleteButton\" type=\"button\" value=\"Delete\" onClick={deleteCustomer} />\n            </div>\n        </div>\n    );\n}\n\nexport default SingleCustomer;\n\n\n","import { IconButton, Popover } from \"@mui/material\";\nimport { SyntheticEvent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { customerDownloadedAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./customersList.css\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport SingleCustomer from \"../../mainComponent/singleCustomer/singleCustomer\";\nimport AddCustomer from \"../addCustomer/addCustomer\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport jwtDecode from \"jwt-decode\";\n\ninterface CustomersList{\n    arrayCustomerDetails:CustomerDetails[]\n}\n\nfunction CustomersList(): JSX.Element {\n    \n        const myUrl = globals.urls.administrator + \"customers/all\"\n    \n        const [arrayCustomerDetails,setData] = useState([]);\n    \n        const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n    \n        const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n        };\n    \n        const handleClose = () => {\n          setAnchorEl(null);\n        };\n    \n        const open = Boolean(anchorEl);\n        const id = open ? 'simple-popover' : undefined;\n    \n    \n        const history = useHistory();\n    \n        let myNumber:number=0;\n    \n        var decoded: AuthenToken;\n        \n        function updateNumber(args:SyntheticEvent){\n            myNumber = Number((args.target as HTMLInputElement).value);\n            console.log(myNumber);\n        }\n    \n        function searchCustomer(){\n            console.log(arrayCustomerDetails);\n            var arrayOneCustomer = arrayCustomerDetails.filter(function(item){\n                return item.id === myNumber;\n            });\n            \n            if(arrayOneCustomer.length<1){\n                notify.error(\"customer was not found !!!\");\n                return\n            }\n            history.push(\"/searchCustomer/\"+myNumber);\n    \n            notify.success(\"customer was found in the system !!!\");\n        }\n    \n        \n        useEffect(()=>{\n            decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n            console.log(decoded.clientType);\n    \n            if (decoded.clientType !== \"administrator\"){\n               notify.error(\"You are not allowed to enter this page!!\")\n               history.push(\"/openPage\");    \n            }\n            \n            console.log(store.getState().customerState);\n            if(store.getState().customerState.customers.length===0){\n                jwtAxios.post(myUrl).then((response)=>{\n                    setData(response.data);\n                    store.dispatch(customerDownloadedAction(response.data))})\n                    .catch(error=>console.log(error));\n            }else{\n                setData(store.getState().customerState.customers);\n            }\n            console.log(arrayCustomerDetails);\n        });\n    \n    \n        return (\n            <div className=\"customersList\">\n                <header>\n                    <div className=\"searchCustomerButton\">\n                        <IconButton className=\"searchCusIcon\" onClick={searchCustomer}>\n                        <SearchIcon style={{fontSize:25}}/>\n                        </IconButton>\n                         <input className =\"searchCusPlace\" type=\"number\" placeholder=\"customer id\" onChange={updateNumber}/>\n                    </div>\n                    <div className=\"headerChartAdminCus\">\n                        <div className=\"Colum\">\n                        Id number\n                        </div>\n                        <div className=\"Colum\">\n                        First Name:\n                        </div>\n                        <div className=\"Colum\">\n                        Last Name:\n                        </div>\n                        <div className=\"Colum\">\n                        Email:\n                        </div>\n                        <div className=\"Colum\">\n                        Password\n                        </div>\n                    </div>\n                </header>   \n                <main>\n                {arrayCustomerDetails.map(item=><SingleCustomer\n                    key={item.email}\n                    id={item.id}\n                    firstName={item.firstName}\n                    lastName={item.lastName}\n                    email={item.email}\n                    password={item.password}\n                    />)}\n                </main>\n                <footer>\n                <br/><br/>\n                <div className=\"addCusButton\">\n                <input className=\"addButton\" type=\"button\" value=\"Add Customer\" onClick={handleClick} />\n                </div>\n                <Popover\n                    className=\"popoverAdd\"\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                    }}\n                >\n                    <AddCustomer/>\n                </Popover>\n                </footer>\n            </div>\n        );\n    }\n    \nexport default CustomersList;\n","import CouponDetails from \"./CouponDetails\";\r\n\r\nclass CustomerDetails{\r\n    id: number =0;\r\n    firstName: string =\"\";\r\n    lastName: string =\"\";\r\n    email: string = \"\";\r\n    password: string = \"\";\r\n    coupons: CouponDetails[] =[];\r\n}\r\nexport default CustomerDetails;\r\n\r\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport SingleCustomer from \"../../mainComponent/singleCustomer/singleCustomer\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { customerDownloadedAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./searchCustomer.css\";\n\ninterface searchCustomer{\n    arrayCustomerDetails:CustomerDetails[]\n}\nfunction SearchCustomer(): JSX.Element {\n    const myUrl = globals.urls.administrator + \"customers/all\";\n    const{customerNum} = useParams<{customerNum?:string}>();\n    var [customerDetails,setData] = useState(new CustomerDetails());\n    let arrayCustomerDetails:CustomerDetails[]=[];\n\n    useEffect(()=>{\n        console.log(store.getState().customerState);\n        if(store.getState().customerState.customers.length===0){\n            jwtAxios.post(myUrl).then((response)=>{\n                arrayCustomerDetails = response.data \n                //setData(response.data);\n                store.dispatch(customerDownloadedAction(response.data))});\n        }else{\n            arrayCustomerDetails = store.getState().customerState.customers;\n        }\n\n        console.log(arrayCustomerDetails);\n        var arrayOneCustomer = arrayCustomerDetails.filter(function(item){\n            return item.id == Number(customerNum);\n        });\n\n        if(arrayOneCustomer.length<1){\n            notify.error(\"customer was not found !!!\");\n            return\n        }\n\n        console.log(arrayOneCustomer[0]);\n        setData(arrayOneCustomer[0])\n\n        /*\n        console.log(store.getState().authState.loginUser.clientType)\n        \n        if (store.getState().authState.loginUser.clientType != \"administrator\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");\n            \n        }\n        */\n        \n    });\n    return (\n        <div className=\"searchCustomer\">\n            <SingleCustomer\n                key={customerDetails.email}\n                id={customerDetails.id}\n                firstName={customerDetails.firstName}\n                lastName={customerDetails.lastName}\n                email={customerDetails.email}\n                password={customerDetails.password}\n                />\n\t\t\t\n        </div>\n    );\n}\n\nexport default SearchCustomer;\n\n\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { customerDownloadedAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport SingleCouponRow from \"../singleCouponRow/singleCouponRow\";\nimport \"./couponCustomerList.css\";\n\ninterface CouponCustomerListProps{\n    arrayCouponDetails:CouponDetails[],\n    customersDetails:CustomerDetails[],\n}\n\nfunction CouponCustomerList(props: CouponCustomerListProps ): JSX.Element {\n    \n    const myUrl = globals.urls.administrator + \"customers/all\";\n\n\n    const{customerNum} = useParams<{customerNum?:string}>();\n    var [customersDetails,setData] = useState([]);\n    var [arrayCouponDetails,setCoupns]=useState([]);\n    \n\n    useEffect(()=>{\n        console.log(\"customer list strat\");\n        console.log(\"customer number is:\" +customerNum);\n            if (store.getState().customerState.customers.length===0){\n                jwtAxios.post(myUrl).then((response)=>{\n                    console.log(response.data)\n                    setData(response.data);\n                    store.dispatch(customerDownloadedAction(response.data))})\n                    .catch(error=>{console.log(error)});\n            } else {\n                setData(store.getState().customerState.customers);\n            }\n            if(customersDetails.length>0){\n            console.log(customersDetails);\n            var arrayByCustomer = customersDetails.filter(function(item){\n                return item.id == Number(customerNum);\n            });\n            \n            setCoupns(arrayByCustomer[0].coupons);\n           \n            console.log(\"only coupons\");\n            console.log(arrayCouponDetails);\n            }\n            \n        });\n\n    return (\n        <div className=\"couponCustomerList\">\n            <header>\n            <h1>list of coupons:</h1>\n            </header>\n            <main>\n            {arrayCouponDetails.map(item=><SingleCouponRow \n             key={item.id}\n             id={item.id}\n             category={item.category}\n             title={item.title} \n             endDate={item.endDate}\n             startDate={item.startDate}\n             amount={item.amount} \n             price={item.price} \n             image={item.image}\n             description={item.description}\n             companyID={item.companyID}              \n            />)}\n            </main>\n            <br/><br/><br/><br/><br/> \n        </div>\n    );\n}\n\nexport default CouponCustomerList;\n","\nimport \"./adminRouting.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AdminOpenPage from \"../adminOpenPage/adminOpenPage\";\nimport AddCompany from \"../addCompany/addCompany\";\nimport CompanysList from \"../companysList/companysList\";\nimport CouponCompanyList from \"../couponCompanyList/couponCompanyList\";\nimport SearchCompany from \"../searchCompany/searchCompany\";\nimport AddCustomer from \"../addCustomer/addCustomer\";\nimport CustomersList from \"../customersList/customersList\";\nimport SearchCustomer from \"../searchCustomer/searchCustomer\";\nimport CouponCustomerList from \"../couponCustomerList/couponCustomerList\";\nfunction AdminRouting(): JSX.Element {\n    return (\n        <div className=\"adminRouting\">\n\t\t\t<Switch>\n                <Route path=\"/administrator\" component={AdminOpenPage} exact/>\n                <Route path=\"/addCompany\" component={AddCompany} exact/>\n                <Route path=\"/allCompanies\" component={CompanysList} exact/>\n                <Route path=\"/companyCoupnsList/:companyNum\" component={CouponCompanyList} exact/>\n                <Route path=\"/searchCompany/:companyNum\" component={SearchCompany} exact/>\n                <Route path=\"/addCustomer\" component={AddCustomer} exact/>\n                <Route path=\"/allCustomers\" component={CustomersList} exact/>\n                <Route path=\"/customerCoupnsList/:customerNum\" component={CouponCustomerList} exact/>\n                <Route path=\"/searchCustomer/:customerNum\" component={SearchCustomer} exact/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default AdminRouting;\n","import jwtDecode from \"jwt-decode\";\nimport { useEffect } from \"react\";\nimport { BrowserRouter, useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport store from \"../../redux/store\";\nimport notify from \"../../utils/Notify\";\nimport AdminAside from \"../adminAside/adminAside\";\nimport AdminRouting from \"../adminRouting/adminRouting\";\nimport \"./layoutAdminComp.css\";\n\nfunction LayoutAdminComp(): JSX.Element {\n    var decoded: AuthenToken;\n    const history = useHistory();\n    \n    useEffect(()=>{\n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"administrator\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n\n        store.dispatch(loginUserString(localStorage.getItem(\"token\")));\n        console.log(store.getState().authState.loginUser); \n    });\n\n    return (\n        <div className=\"layoutAdminComp\">\n            <BrowserRouter>\n                <header className=\"adminHeader\">\n                    <AdminAside/>\n                </header>\n                <main className=\"adminMain\">\n                    <AdminRouting/>\n                </main>\n            </BrowserRouter>\n\t\t\t\n        </div>\n    );\n}\n\nexport default LayoutAdminComp;\n","import { NavLink } from \"react-router-dom\";\nimport \"./companyAside.css\";\n\nfunction CompanyAside(): JSX.Element {\n    return (\n        <div className=\"companyAside\">\n\t\t\t<h1 className=\"title\">Company\n            </h1><br/>\n            <nav>\n                <NavLink className=\"companyNav\" exact to=\"/companyDetails\">My Details</NavLink>\n                |\n                <NavLink className=\"companyNav\" exact to=\"/allCoupons\">Coupons</NavLink>\n               \n            </nav>\n        </div>\n    );\n}\n\nexport default CompanyAside;\n","import jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport CompanyDetails from \"../../model/CompanyDetails\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport { companyDownloadedAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./CompanyDetailsComp.css\";\n\ninterface CompanyDetailsComp{\n    companyDetails:CompanyDetails[];\n}\n\nfunction CompanyDetailsComp(): JSX.Element {\n    var decoded: AuthenToken;\n    const history = useHistory();\n    const myUrl = globals.urls.company + \"details\";\n    const [companyDetails,setData] = useState([new CompanyDetails()]);\n    const goCoupons =()=>{\n        history.push(\"/allCoupons\")\n    }\n    \n    useEffect(()=>{\n       \n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"company\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n\n        store.dispatch(loginUserString(localStorage.getItem(\"token\")));\n\n        console.log(store.getState().companyState.companies);\n\n        if(store.getState().companyState.companies.length===0){\n            jwtAxios.post(myUrl)\n                .then((response)=>{\n                console.log(response.data);\n                var oneCompanyArray:CompanyDetails[] = []; \n                oneCompanyArray.push(response.data);\n                store.dispatch(companyDownloadedAction(oneCompanyArray));\n                setData(oneCompanyArray);\n                console.log(companyDetails)\n            }).catch(error=>{console.log(error)}); \n        }else{\n            setData(store.getState().companyState.companies);\n            console.log(companyDetails)\n        }                        \n    });\n    return (\n        <div className=\"CompanyDetailsComp\">\n            <main>\n                <div className=\"ColumDetails\">\n                Id number\n                </div>\n                <div className=\"ColumDetails\">\n\t\t\t    Name:\n                </div>\n                <div className=\"ColumDetails\">\n                Email:\n                </div>\n                <div className=\"ColumDetails\">\n                Password\n                </div>\n            </main>\n            <div className=\"singleCompanyComp\">\n                <div className=\"Colum1\">\n                {companyDetails[0].id}\n                </div>\n                <div className=\"Colum1\">\n\t\t\t    {companyDetails[0].name}\n                </div>\n                <div className=\"Colum1\">\n                {companyDetails[0].email}\n                </div>\n                <div className=\"Colum1\">\n                {companyDetails[0].password}\n                </div>\n               \n                <input id=\"listButtonComp\" type=\"button\" value=\"Coupns List\" onClick={goCoupons} />\n                \n            </div>\n        </div>\n    );\n}\n\nexport default CompanyDetailsComp;\n","import { useEffect, useState } from \"react\";\nimport CompanyDetails from \"../../model/CompanyDetails\";\nimport { companyDownloadedAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport \"./companyOpenPage.css\";\n\nfunction CompanyOpenPage(): JSX.Element {\n    const myUrl = globals.urls.company + \"details\";\n    let oneCompanyArray:CompanyDetails[] = [];\n    const [companyName,setName] = useState<string>(\"\");\n\n    useEffect(()=>{\n        console.log(store.getState().companyState.companies);\n        jwtAxios.post(myUrl).then((response)=>{\n            console.log(response.data);\n            //let oneCompanyArray:CompanyDetails[] = []; \n            oneCompanyArray.push(response.data);\n            setName(oneCompanyArray[0].name);\n            store.dispatch(companyDownloadedAction(oneCompanyArray));\n        }\n        ).catch(error=>{console.log(error)});\n    })  \n\n    return (\n        <div className=\"companyOpenPage\">\n\t\t\t <div className=\"discriptionCompany\">\n                <div className=\"buneerTitle\">\n                HELLO {companyName} <br/>\n                </div>\n                <div className=\"aboutUsCompany\">\n                    You are in your personal page.<br/>\n                    Here you can see all the coupons you have that in system.<br/>\n                    To see all coupons details press on coupons tab,<br/>\n                    also you can see your company details.<br/>\n                    To see all details press on my details tab,<br/>\n                    also you can add/update and delete any coupon you like.<br/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CompanyOpenPage;\n","import { DesktopDatePicker, LocalizationProvider } from \"@mui/lab\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { Button, IconButton, MenuItem, Select, Stack, styled, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { companyCouponUpdateAction } from \"../../redux/CompanyState\";\nimport { couponUpdateAction } from \"../../redux/CouponState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport UploadIcon from '@mui/icons-material/Upload';\nimport Backendless from \"backendless\";\nimport \"./updateCoupon.css\";\n\ninterface updateCouponPrpos{\n    id:number,\n}\n\nfunction UpdateCoupon(props:updateCouponPrpos): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<CouponDetails>();\n\n    const myUrl = globals.urls.company + \"updateCoupon\";\n\n    const [startDate, setStartDate] = useState<string>()\n\n    const [endDate, setEndDate] = useState<string>()\n\n    const [imgName, setName] = useState<string>()\n\n    const fixStartDate = (newDate:Date)=>{\n        var day = newDate.getDate().toString();\n        var mouth =(newDate.getMonth()+1).toString();\n        var year = newDate.getFullYear().toString();\n        if(day.length<2){\n            day = \"0\"+day;\n        }\n        var startDate1 =year+\"-\"+mouth+\"-\"+day;\n        console.log(startDate1);\n        setStartDate(startDate1);\n    }\n\n    const fixEndDate = (newDate:Date)=>{\n        var day = newDate.getDate().toString();\n        var mouth =(newDate.getMonth()+1).toString();\n        var year = newDate.getFullYear().toString();\n        if(day.length<2){\n            day = \"0\"+day;\n        }\n        var endDate1 =year+\"-\"+mouth+\"-\"+day;\n        console.log(endDate1);\n        setEndDate(endDate1);\n    }\n\n    const fileHandler = (myEvent:any)=>{\n        console.log(myEvent);\n        \n        var file : File =  myEvent.target.files[0];\n        setName(file.name);\n        Backendless.initApp(\"AE176C35-B9A0-07F6-FF0E-242CF8C99600\",\"ACFDB970-70A6-45A1-9877-9716DEE3861D\");\n        Backendless.Files.upload(file, \"img\", true )\n        .then(  fileURLs =>{\n           console.log( \"File successfully uploaded. Path to download: \" + fileURLs);\n          \n           console.log(imgName);\n         })\n        .catch(  error =>{\n           console.log( \"error - \" + error.message );\n        })\n    }\n\n    const Input = styled('input')({\n        display: 'none',\n    });\n\n    function send(couponDetails:CouponDetails){\n        couponDetails.startDate=startDate;\n        couponDetails.endDate=endDate;\n        couponDetails.image=imgName;\n        couponDetails.id=props.id;\n        console.log(couponDetails);\n        \n        jwtAxios.post(myUrl,couponDetails).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(couponUpdateAction(couponDetails));\n            store.dispatch(companyCouponUpdateAction());\n            notify.success(\"coupon was update successfully!\");\n        }).catch(error=>{\n            console.log(error);\n            notify.error(error.response.data.description)});\n    }\n    return (\n        <div className=\"updateCoupon\">\n            <h3>Update new Coupon</h3>\n                <form onSubmit={handleSubmit(send)}>\n                    <TextField label=\"title\" variant=\"outlined\"\n                        {...register(\"title\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 40, message:\"max length is 40 letters\"},\n                    })}/>\n                     <span> {errors.title && <p>{errors.title.message}</p>}</span>\n                    <br/><br/>\n                    <div className=\"categoryLabel\">category:</div>\n                    <Select label=\"category\"  style={{width:195}} {...register(\"category\",{required : true})}>\n                        <MenuItem value={\"food\"} >food</MenuItem>\n                        <MenuItem value={\"electricity\"}>electricity</MenuItem>\n                        <MenuItem value={\"restaurant\"}>restaurant</MenuItem>\n                        <MenuItem value={\"vacation\"}>vacation</MenuItem>\n                        <MenuItem value={\"sport\"}>sport</MenuItem>\n                    </Select>\n                    <br/><br/>\n                    <TextField label=\"description\" variant=\"outlined\"\n                        {...register(\"description\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 400, message:\"max length is 400 letters\"},\n                    })}/>\n                     <span> {errors.description && <p>{errors.description.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField type=\"number\" label=\"price\" variant=\"outlined\"\n                        {...register(\"price\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 1,  message: \"minimum price is 1 NIS\"},\n                    })}/>\n                     <span> {errors.price && <p>{errors.price.message}</p>}</span>\n                    <br/><br/>\n\n                    <TextField type=\"number\" label=\"amount\" variant=\"outlined\"\n                        {...register(\"amount\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 1,  message: \"minimum amount is 1\"},\n                    })}/>\n                     <span> {errors.price && <p>{errors.price.message}</p>}</span>\n                    <br/><br/>\n\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <Stack spacing={3}>\n                            <DesktopDatePicker\n                                label=\"Start Date\"\n                                value={startDate}\n                                minDate={new Date('2017-01-01')}\n                                onChange={fixStartDate}\n                                renderInput={(params) => <TextField {...params} />}\n                             />\n                        </Stack>\n                    </LocalizationProvider>\n                    <br/>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <Stack spacing={3}>\n                            <DesktopDatePicker\n                                label=\"End Date\"\n                                value={endDate}\n                                minDate={new Date('2017-01-01')}\n                                onChange={fixEndDate}\n                                renderInput={(params) => <TextField {...params} />}\n                             />\n                        </Stack>\n                    </LocalizationProvider>\n                    <br/>\n                     \n                    upload image:\n                    <Stack id=\"uploadImg\" direction=\"row\" alignItems=\"center\" spacing={2}>\n                        \n                         <label htmlFor=\"icon-button-file\">\n                            <Input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={fileHandler} />\n                            <IconButton  color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                <UploadIcon />\n                            </IconButton>\n                        </label>\n                    </Stack>\n\n                  \n                    <Button id =\"sendButton\" type=\"submit\" >Send</Button>\n                   \n\n                </form>\n   \n\t\t\t\n        </div>\n    );\n}\n\nexport default UpdateCoupon;\n","import { Popover, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { companyDeleteAction } from \"../../redux/CompanyState\";\nimport { couponDeleteAction } from \"../../redux/CouponState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport UpdateCoupon from \"../updateCoupon/updateCoupon\";\nimport \"./singleCouponComp.css\";\n\ninterface SingleCouponCompProps{\n    amount:number,\n    category:string,\n    companyID:number,\n    description:string,\n    endDate:string,\n    id:number,\n    image:string,           \n    price:number,\n    startDate:string,   \n    title:string,\n}\n\nfunction SingleCouponComp(props:SingleCouponCompProps): JSX.Element {\n    let history = useHistory();\n    const myUrl = globals.urls.company + \"deleteCoupon/\";\n    const imgUrl = \"https://backendlessappcontent.com/AE176C35-B9A0-07F6-FF0E-242CF8C99600/ACFDB970-70A6-45A1-9877-9716DEE3861D/files/img/\"+props.image;\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    //popOver image\n    const [anchorElm, setAnchorElm] = React.useState<HTMLElement | null>(null);\n\n    const handlePopoverOpen = (event: React.MouseEvent<HTMLElement>) => {\n      setAnchorElm(event.currentTarget);\n    };\n  \n    const handlePopoverClose = () => {\n      setAnchorElm(null);\n    };\n  \n    const open1 = Boolean(anchorElm);\n\n    function deleteCoupon(){\n        jwtAxios.delete(myUrl+props.id).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(companyDeleteAction(props.companyID));\n            store.dispatch(couponDeleteAction(props.id))\n            notify.success(\"coupon was deleted successfully!\");\n            console.log(\"coupon was delete\")\n            history.push(\"/allCoupons\");\n            console.log(\"coupon was delete\")\n        })\n    }\n    return (\n        <div className=\"singleCouponComp companyBox\">\n            {/*\n            <div className=\"couponColum\">\n            {props.id}\n            </div>\n            <div className=\"couponColum\">\n\t\t\t{props.companyID}\n            </div>\n            */}\n            <div className=\"couponColum\">\n\t\t\t{props.category}\n            </div>\n            <div className=\"couponColum\">\n            {props.title}\n            </div>\n            <div className=\"columDescription\">\n            {props.description}\n            </div>\n            <div className=\"couponColum\">\n            {props.startDate}\n            </div>\n            <div className=\"couponColum\">\n            {props.endDate}\n            </div>\n            <div className=\"couponColumPrice\">\n            {props.price}\n            </div>\n            <div className=\"couponColum\">\n            {props.amount}\n            </div>\n            <div>\n            <Typography\n             aria-owns={open1 ? 'mouse-over-popover' : undefined}\n            aria-haspopup=\"true\"\n            onMouseEnter={handlePopoverOpen}\n            onMouseLeave={handlePopoverClose}\n            >\n            <div className=\"couponColum\">\n            {props.image}\n            </div>\n            </Typography>\n            <Popover\n            className=\"popoverImg\"\n            id=\"mouse-over-popover\"\n            sx={{\n            pointerEvents: 'none',\n            }}\n            open={open1}\n            anchorEl={anchorElm}\n            anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n             }}\n            transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n                }}\n            onClose={handlePopoverClose}\n                disableRestoreFocus\n      >\n            <Typography className=\"Timg\" sx={{ p: 1 }}>\n                <img id=\"img1\" src={imgUrl} />\n            </Typography>\n            </Popover>\n            </div>\n            <div className=\"couponColum\">\n            <input className=\"listButton\" type=\"button\" value=\"Update\" onClick={handleClick} />\n            </div>\n            <Popover\n                className=\"popoverUpdate\"\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}\n            >\n                <UpdateCoupon\n                id={props.id}\n                />\n            </Popover>\n            <div className=\"couponColum\">\n            <input className=\"listButton deleteButton\" type=\"button\" value=\"Delete\" onClick={deleteCoupon} />\n            </div>\n\t\t\t\n        </div>\n    );\n}\n\nexport default SingleCouponComp;\n","import { Button, IconButton, MenuItem, Select, Stack, styled, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { couponAddAction } from \"../../redux/CouponState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport Backendless from \"backendless\";\nimport UploadIcon from '@mui/icons-material/Upload';\n\nimport \"./AddCoupon.css\";\nimport { companyCouponUpdateAction } from \"../../redux/CompanyState\";\nimport { PhotoCamera } from \"@mui/icons-material\";\ninterface AddCouponProps{\n    companyId:number,\n}\n\nfunction AddCoupon(props:AddCouponProps): JSX.Element {\n    const {register, handleSubmit, formState: { errors }} = useForm<CouponDetails>();\n\n    const myUrl = globals.urls.company + \"addCoupon\";\n\n    const [startDate, setStartDate] = useState<string>()\n\n    const [endDate, setEndDate] = useState<string>()\n\n    const [imgName, setName] = useState<string>()\n\n    const fixStartDate = (newDate:Date)=>{\n        var day = newDate.getDate().toString();\n        var mouth =(newDate.getMonth()+1).toString();\n        var year = newDate.getFullYear().toString();\n        if(day.length<2){\n            day = \"0\"+day;\n        }\n        var startDate1 =year+\"-\"+mouth+\"-\"+day;\n        console.log(startDate1);\n        setStartDate(startDate1);\n    }\n\n    const fixEndDate = (newDate:Date)=>{\n        var day = newDate.getDate().toString();\n        var mouth =(newDate.getMonth()+1).toString();\n        var year = newDate.getFullYear().toString();\n        if(day.length<2){\n            day = \"0\"+day;\n        }\n        var endDate1 =year+\"-\"+mouth+\"-\"+day;\n        console.log(endDate1);\n        setEndDate(endDate1);\n    }\n\n    const fileHandler = (myEvent:any)=>{\n        console.log(myEvent);\n        \n        var file : File =  myEvent.target.files[0];\n        setName(file.name);\n        Backendless.initApp(\"AE176C35-B9A0-07F6-FF0E-242CF8C99600\",\"ACFDB970-70A6-45A1-9877-9716DEE3861D\");\n        Backendless.Files.upload(file, \"img\", true )\n        .then(  fileURLs =>{\n           console.log( \"File successfully uploaded. Path to download: \" + fileURLs);\n          \n           console.log(imgName);\n         })\n        .catch(  error =>{\n           console.log( \"error - \" + error.message );\n        })\n    }\n\n    const Input = styled('input')({\n        display: 'none',\n    });\n      \n    \n\n    function send(couponDetails:CouponDetails){\n        couponDetails.startDate=startDate;\n        couponDetails.endDate=endDate;\n        couponDetails.image=imgName;\n        couponDetails.companyID=props.companyId;\n        console.log(couponDetails);\n        jwtAxios.post(myUrl,couponDetails).then((response)=>{\n            console.log(response.config.headers.authorization);\n            store.dispatch(couponAddAction(couponDetails));\n            store.dispatch(companyCouponUpdateAction());\n            notify.success(\"coupon was add successfully!\");\n        }).catch(error=>{\n            console.log(error);\n            notify.error(error.response.data.description)});\n    }\n            \n    return (\n        <div className=\"AddCoupon\">\n\t\t\t<h3>Add new Coupon</h3>\n                <form onSubmit={handleSubmit(send)}>\n                    <TextField label=\"title\" variant=\"outlined\"\n                        {...register(\"title\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 40, message:\"max length is 40 letters\"},\n                    })}/>\n                     <span> {errors.title && <p>{errors.title.message}</p>}</span>\n                    <br/><br/>\n                    <div className=\"categoryLabel\">category:</div>\n                    <Select label=\"category\"  style={{width:195}} {...register(\"category\",{required : true})}>\n                        <MenuItem value={\"food\"} >food</MenuItem>\n                        <MenuItem value={\"electricity\"}>electricity</MenuItem>\n                        <MenuItem value={\"restaurant\"}>restaurant</MenuItem>\n                        <MenuItem value={\"vacation\"}>vacation</MenuItem>\n                        <MenuItem value={\"sport\"}>sport</MenuItem>\n                    </Select>\n                    <br/><br/>\n                    <TextField label=\"description\" variant=\"outlined\"\n                        {...register(\"description\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 2,  message: \"min length is 2 letters\"},\n                            maxLength: {value: 400, message:\"max length is 400 letters\"},\n                    })}/>\n                     <span> {errors.description && <p>{errors.description.message}</p>}</span>\n                    <br/><br/>\n\n                     <TextField type=\"number\" label=\"price\" variant=\"outlined\"\n                        {...register(\"price\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 1,  message: \"minimum price is 1 NIS\"},\n                    })}/>\n                     <span> {errors.price && <p>{errors.price.message}</p>}</span>\n                    <br/><br/>\n\n                    <TextField type=\"number\" label=\"amount\" variant=\"outlined\"\n                        {...register(\"amount\", {\n                            required: {value: true, message: \"this field is required\"},\n                            minLength: {value: 1,  message: \"minimum amount is 1\"},\n                    })}/>\n                     <span> {errors.price && <p>{errors.price.message}</p>}</span>\n                    <br/><br/>\n\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <Stack spacing={3}>\n                            <DesktopDatePicker\n                                label=\"Start Date\"\n                                value={startDate}\n                                minDate={new Date('2017-01-01')}\n                                onChange={fixStartDate}\n                                renderInput={(params) => <TextField {...params} />}\n                             />\n                        </Stack>\n                    </LocalizationProvider>\n                    <br/>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <Stack spacing={3}>\n                            <DesktopDatePicker\n                                label=\"End Date\"\n                                value={endDate}\n                                minDate={new Date('2017-01-01')}\n                                onChange={fixEndDate}\n                                renderInput={(params) => <TextField {...params} />}\n                             />\n                        </Stack>\n                    </LocalizationProvider>\n                    <br/>\n                 \n                    upload image:\n                    <Stack id=\"uploadImg\" direction=\"row\" alignItems=\"center\" spacing={2}>\n                        \n                         <label htmlFor=\"icon-button-file\">\n                            <Input accept=\"image/*\" id=\"icon-button-file\" type=\"file\" onChange={fileHandler} />\n                            <IconButton  color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                                <UploadIcon />\n                            </IconButton>\n                        </label>\n                    </Stack>\n\n    \n                    <Button id =\"sendButton\" type=\"submit\" >Send</Button>\n                   \n\n                </form>\n\n        </div>\n    );\n}\n\nexport default AddCoupon;\n","import { Box, FormControl, InputLabel, MenuItem, Popover, Select, SelectChangeEvent, Slider } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport { companyDownloadedAction } from \"../../redux/CompanyState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./couponsListCamp.css\";\nimport SingleCouponComp from \"../singleCouponComp/singleCouponComp\";\nimport jwtDecode from \"jwt-decode\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport AddCoupon from \"../AddCoupon/AddCoupon\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport CompanyDetails from \"../../model/CompanyDetails\";\n\n\ninterface CompanyList{\n    couponsCompanyDetails:CouponDetails[],\n    companyDetails:CompanyDetails[];\n}\n\nfunction CouponsListCamp(): JSX.Element {\n    const myUrl = globals.urls.company + \"details\";\n\n    const [couponsCompanyDetails,setCouponData] = useState([]);\n    const [companyId,setCompanyId] = useState<number>();\n\n\n    const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const history = useHistory();\n\n    var decoded: AuthenToken;\n    var sortByCategory: CouponDetails[]=[];\n    var couponsArray:CouponDetails[]; \n    const [selectedCategory, setCategory] = useState('start');\n\n    const [price, setPrice] = useState<number | number[]>(5000);\n\n    const marks =[\n        {\n          value:0,\n          label:0,\n        },\n        {\n            value:5000,\n            label:5000,\n        },\n        {\n            value:2500,\n            label:\"price\",\n        },\n\n    ]\n\n    const handlePriceChange =(event: Event, value: number | number[], activeThumb: number) =>{\n        console.log(value);\n        console.log(activeThumb);\n        setPrice(value)\n        searchCoupon(selectedCategory,value);\n    }\n\n    const handleChange = (selectedCategory: SelectChangeEvent) => {\n        setCategory(selectedCategory.target.value as string);\n        searchCoupon(selectedCategory.target.value as string,price);\n    };\n\n\n    function searchCoupon(onlineCategory:string , price:number | number[]){\n        couponsArray = store.getState().companyState.companies[0].coupons;\n        console.log(store.getState().companyState.companies[0]);\n        if(onlineCategory === \"all\"){\n            sortByCategory = couponsArray.filter(function(item){\n                return (item.price<=price); \n            })\n        }else{\n            sortByCategory = couponsArray.filter(function(item){\n                return (item.category === onlineCategory && item.price<=price); \n            })\n        }\n        /*\n        if(sortByCategory.length ===0 && onlineCategory !==\"all\" ){\n            notify.error(\"coupons were not found in the system !!!\");\n\n        }\n        */\n        setCouponData(sortByCategory);      \n    }\n\n    useEffect(()=>{\n       \n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"company\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n\n        store.dispatch(loginUserString(localStorage.getItem(\"token\")));\n\n        console.log(store.getState().companyState.companies);\n\n        if(store.getState().companyState.companies.length===0){\n            jwtAxios.post(myUrl)\n                .then((response)=>{\n                console.log(response.data);\n                let oneCompanyArray:CompanyDetails[] = []; \n                oneCompanyArray.push(response.data);\n                setCompanyId(oneCompanyArray[0].id);\n                store.dispatch(companyDownloadedAction(oneCompanyArray));\n                if(selectedCategory === \"start\"){\n                    setCouponData(store.getState().companyState.companies[0].coupons);\n                    } \n               \n            }).catch(error=>{console.log(error)}); \n        }else{\n            setCompanyId(store.getState().companyState.companies[0].id);\n            console.log(\"in else\");\n            if(selectedCategory === \"start\"){\n            setCouponData(store.getState().companyState.companies[0].coupons);\n            } \n           \n        }                        \n    });\n    \n    return (\n        <div className=\"couponsListCamp\">\n            <header>\n\t\t\t    <div className=\"searchCouponButton\">\n                    <Box id = \"SliderBox\" width={300}>\n                        <Slider id=\"priceSlider\" \n                        size=\"small\"\n                        defaultValue={5000}\n                        aria-label=\"Small\"\n                        valueLabelDisplay=\"auto\"\n                        max={5000}\n                        onChange={handlePriceChange}\n                        marks={marks}\n                        />\n                    </Box>\n                    <Box id = \"categoryBox\" sx={{ minWidth: 120 }}>\n                    <FormControl id = \"categoryList\" fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n                        <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={selectedCategory}\n                        label=\"Search by Category\"\n                        onChange={handleChange}\n                        >\n                        <MenuItem value={\"all\"}>all</MenuItem>\n                        <MenuItem value={\"food\"}>food</MenuItem>\n                        <MenuItem value={\"electricity\"}>electricity</MenuItem>\n                        <MenuItem value={\"restaurant\"}>restaurant</MenuItem>\n                        <MenuItem value={\"vacation\"}>vacation</MenuItem>\n                        <MenuItem value={\"sport\"}>sport</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Box>\n                </div>\n                <div className=\"headerChart\">\n                    {/*\n                    <div className=\"Colum\">\n                    Id number\n                    </div>\n                    <div className=\"Colum\">\n\t\t\t        Company id:\n                    </div>\n                    */}\n                    <div className=\"ColumCategory\">\n\t\t\t        Category:\n                    </div>\n                    <div className=\"Colum\">\n                    Title:\n                    </div>\n                    <div className=\"ColumDescription\">\n                    Description:\n                    </div>\n                    <div className=\"Colum\">\n                    Start date:\n                    </div>\n                    <div className=\"Colum\">\n                    End date:\n                    </div>\n                    <div className=\"Colum\">\n                    Price:\n                    </div>\n                    <div className=\"Colum\">\n                    Amount:\n                    </div>\n                    <div className=\"Colum\">\n                    Image:\n                    </div>\n                </div>\n            </header>\n            <main>\n                {couponsCompanyDetails.map(item=><SingleCouponComp\n                key={item.id}\n                id={item.id}\n                amount={item.amount}\n                category={item.category}\n                companyID={item.companyID}\n                description={item.description}\n                endDate={item.endDate}\n                image={item.image}           \n                price={item.price}\n                startDate={item.startDate} \n                title={item.title}\n                />)}\n            <br/><br/>\n            </main>\n            <footer>\n            <div className=\"addCoupButton\">\n                <input className=\"addButton\" type=\"button\" value=\"Add Coupon\" onClick={handleClick} />\n                </div>\n                <Popover\n                    className=\"popoverAdd\"\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                    }}\n                >\n                    <AddCoupon companyId={companyId}/>\n                </Popover>\n            </footer> \n        </div>     \n           \n    );\n}\n\nexport default CouponsListCamp;\n\n\n\n","import { Route, Switch } from \"react-router-dom\";\nimport CompanyDetailsComp from \"../CompanyDetailsComp/CompanyDetailsComp\";\nimport CompanyOpenPage from \"../companyOpenPage/companyOpenPage\";\nimport CouponsListCamp from \"../couponsListCamp/couponsListCamp\";\nimport \"./companyRouting.css\";\n\nfunction CompanyRouting(): JSX.Element {\n    return (\n        <div className=\"companyRouting\">\n            <Switch>\n                <Route path=\"/company\" component={CompanyOpenPage} exact/>\n                <Route path=\"/allCoupons\" component={CouponsListCamp} exact/>\n                <Route path=\"/companyDetails\" component={CompanyDetailsComp} exact/>\n            </Switch>\n\t\t\t\n        </div>\n    );\n}\n\nexport default CompanyRouting;\n","import jwtDecode from \"jwt-decode\";\nimport { useEffect } from \"react\";\nimport { BrowserRouter, useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport store from \"../../redux/store\";\nimport notify from \"../../utils/Notify\";\nimport CompanyAside from \"../companyAside/companyAside\";\nimport CompanyRouting from \"../companyRouting/companyRouting\";\nimport \"./layoutCompanyComp.css\";\n\nfunction LayoutCompanyComp(): JSX.Element {\n    var decoded: AuthenToken;\n    const history = useHistory();\n    \n    useEffect(()=>{\n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"company\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n\n        store.dispatch(loginUserString(localStorage.getItem(\"token\")));\n        console.log(store.getState().authState.loginUser); \n    });\n    \n    return (\n        <div className=\"layoutCompanyComp\">\n\t\t\t<BrowserRouter>\n                <header className=\"companyHeader\">\n                    <CompanyAside/>\n                </header>\n                <main className=\"companyMain\">\n                    <CompanyRouting/>\n                </main>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default LayoutCompanyComp;\n","import { NavLink } from \"react-router-dom\";\nimport \"./customerAside.css\";\n\nfunction CustomerAside(): JSX.Element {\n    return (\n        <div className=\"customerAside\">\n            <h1 className=\"title\">Customer\n            </h1><br/>\n            <nav>\n                <NavLink className=\"customerNav\" exact to=\"/customerDetails\">My Details</NavLink>\n                |\n                <NavLink className=\"customerNav\" exact to=\"/allCustomerCoupons\">Coupons</NavLink>\n               \n            </nav>\n\t\t\t\n        </div>\n    );\n}\n\nexport default CustomerAside;\n","import { Box, FormControl, InputLabel, MenuItem, Select, SelectChangeEvent, Slider } from \"@mui/material\";\nimport jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport SingleCouponRow from \"../../adminComponents/singleCouponRow/singleCouponRow\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport CouponDetails from \"../../model/CouponDetails\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport { customerDownloadedAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./couponsListCustomer.css\";\n\ninterface CouponsListCustomer{\n    couponsCustomerDetails:CouponDetails[],\n    customerDetails:CustomerDetails[];\n}\n\nfunction CouponsListCustomer(): JSX.Element {\n\n    const myUrl = globals.urls.customer + \"details\";\n\n    const [couponsCustomerDetails,setCouponData] = useState([]);\n\n    const history = useHistory();\n\n    var decoded: AuthenToken;\n    var sortByCategory: CouponDetails[]=[];\n    var couponsArray:CouponDetails[]; \n    const [selectedCategory, setCategory] = useState('start');\n\n    const [price, setPrice] = useState<number | number[]>(5000);\n\n    const marks =[\n        {\n          value:0,\n          label:0,\n        },\n        {\n            value:5000,\n            label:5000,\n        },\n        {\n            value:2500,\n            label:\"price\",\n        },\n\n    ]\n\n    const handlePriceChange =(event: Event, value: number | number[], activeThumb: number) =>{\n        console.log(value);\n        console.log(activeThumb);\n        setPrice(value)\n        searchCoupon(selectedCategory,value);\n    }\n\n    const handleChange = (selectedCategory: SelectChangeEvent) => {\n        setCategory(selectedCategory.target.value as string);\n        searchCoupon(selectedCategory.target.value as string,price);\n    };\n\n\n    function searchCoupon(onlineCategory:string , price:number | number[]){\n        couponsArray = store.getState().customerState.customers[0].coupons;\n        console.log(store.getState().customerState.customers[0]);\n        if(onlineCategory === \"all\"){\n            sortByCategory = couponsArray.filter(function(item){\n                return (item.price<=price); \n            })\n        }else{\n            sortByCategory = couponsArray.filter(function(item){\n                return (item.category === onlineCategory && item.price<=price); \n            })\n        }\n        /*\n        if(sortByCategory.length ===0 && onlineCategory !==\"all\" ){\n            notify.error(\"coupons were not found in the system !!!\");\n\n        }\n        */\n        setCouponData(sortByCategory);      \n    }\n\n    useEffect(()=>{\n       \n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"customer\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n\n        store.dispatch(loginUserString(localStorage.getItem(\"token\")));\n\n        console.log(store.getState().customerState.customers);\n\n        if(store.getState().customerState.customers.length===0){\n            jwtAxios.post(myUrl)\n                .then((response)=>{\n                console.log(response.data);\n                let oneCustomerArray:CustomerDetails[] = []; \n                oneCustomerArray.push(response.data);\n                store.dispatch(customerDownloadedAction(oneCustomerArray));\n                if(selectedCategory === \"start\"){\n                    setCouponData(store.getState().customerState.customers[0].coupons);\n                    } \n               \n            }).catch(error=>{console.log(error)}); \n        }else{\n            console.log(\"in else\");\n            if(selectedCategory === \"start\"){\n            setCouponData(store.getState().customerState.customers[0].coupons);\n            } \n           \n        }                        \n    });\n\n    return (\n        <div className=\"couponsListCustomer\">\n            <header>\n             <div className=\"searchCouponButton\">\n                    <Box id = \"SliderBox\" width={300}>\n                        <Slider id=\"priceSlider\" \n                        size=\"small\"\n                        defaultValue={5000}\n                        aria-label=\"Small\"\n                        valueLabelDisplay=\"auto\"\n                        max={5000}\n                        onChange={handlePriceChange}\n                        marks={marks}\n                        />\n                    </Box>\n                    <Box id = \"categoryBox\" sx={{ minWidth: 120 }}>\n                    <FormControl id = \"categoryList\" fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n                        <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={selectedCategory}\n                        label=\"Search by Category\"\n                        onChange={handleChange}\n                        >\n                        <MenuItem value={\"all\"}>all</MenuItem>\n                        <MenuItem value={\"food\"}>food</MenuItem>\n                        <MenuItem value={\"electricity\"}>electricity</MenuItem>\n                        <MenuItem value={\"restaurant\"}>restaurant</MenuItem>\n                        <MenuItem value={\"vacation\"}>vacation</MenuItem>\n                        <MenuItem value={\"sport\"}>sport</MenuItem>\n                        </Select>\n                    </FormControl>\n                    </Box>\n                </div>\n                <h1>list of coupons you purchase:</h1>\n            </header>\n            <main>\n                {couponsCustomerDetails.map(item=><SingleCouponRow \n                key={item.id}\n                id={item.id}\n                category={item.category}\n                title={item.title} \n                endDate={item.endDate}\n                startDate={item.startDate}\n                amount={item.amount} \n                price={item.price} \n                image={item.image}\n                description={item.description}\n                companyID={item.companyID}              \n                />)}\n            </main>\n            <br/><br/>\n        </div>\n    );\n}\n\nexport default CouponsListCustomer;\n","import jwtDecode from \"jwt-decode\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport { customerDownloadedAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport notify from \"../../utils/Notify\";\nimport \"./customerDetailsComp.css\";\n\ninterface CustomerDetailsComp{\n    customerDetails:CustomerDetails[];\n}\n\nfunction CustomerDetailsComp(): JSX.Element {\n    var decoded: AuthenToken;\n    const history = useHistory();\n    const myUrl = globals.urls.customer + \"details\";\n    const [customerDetails,setData] = useState([new CustomerDetails()]);\n    const goCoupons =()=>{\n        history.push(\"/allCustomerCoupons\")\n    }\n\n    useEffect(()=>{\n       \n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"customer\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n\n        store.dispatch(loginUserString(localStorage.getItem(\"token\")));\n\n        console.log(store.getState().customerState.customers);\n\n        if(store.getState().customerState.customers.length===0){\n            jwtAxios.post(myUrl)\n                .then((response)=>{\n                console.log(response.data);\n                var oneCustomerArray:CustomerDetails[] = []; \n                oneCustomerArray.push(response.data);\n                store.dispatch(customerDownloadedAction(oneCustomerArray));\n                setData(oneCustomerArray);\n                console.log(customerDetails)\n            }).catch(error=>{console.log(error)}); \n        }else{\n            setData(store.getState().customerState.customers);\n            console.log(customerDetails)\n        }                        \n    });\n    return (\n        <div className=\"customerDetailsComp\">\n            <main>\n                <div className=\"ColumDetails\">\n                Id number\n                </div>\n                <div className=\"ColumDetails\">\n\t\t\t    first Name:\n                </div>\n                <div className=\"ColumDetails\">\n\t\t\t    Last Name:\n                </div>\n                <div className=\"ColumDetails\">\n                Email:\n                </div>\n                <div className=\"ColumDetails\">\n                Password\n                </div>\n            </main>\n            <div className=\"singleCustomerComp\">\n                <div className=\"Colum1\">\n                {customerDetails[0].id}\n                </div>\n                <div className=\"Colum1\">\n\t\t\t    {customerDetails[0].firstName}\n                </div>\n                <div className=\"Colum1\">\n\t\t\t    {customerDetails[0].lastName}\n                </div>\n                <div className=\"Colum1\">\n                {customerDetails[0].email}\n                </div>\n                <div className=\"Colum1\">\n                {customerDetails[0].password}\n                </div>\n               \n                <input id=\"listButtonComp\" type=\"button\" value=\"Coupns List\" onClick={goCoupons} />\n                \n            </div>\n\t\t\t\n        </div>\n    );\n}\n\nexport default CustomerDetailsComp;\n","import { useEffect, useState } from \"react\";\nimport CustomerDetails from \"../../model/CustomerDetails\";\nimport { customerDownloadedAction } from \"../../redux/CustomerState\";\nimport store from \"../../redux/store\";\nimport globals from \"../../utils/Globals\";\nimport jwtAxios from \"../../utils/JWTAxios\";\nimport \"./customerOpenPage.css\";\n\nfunction CustomerOpenPage(): JSX.Element {\n\n    const myUrl = globals.urls.customer + \"details\";\n    let oneCustomerArray:CustomerDetails[] = [];\n    const [customerName,setName] = useState<string>(\"\");\n\n    useEffect(()=>{\n        console.log(store.getState().customerState.customers);\n        jwtAxios.post(myUrl).then((response)=>{\n            console.log(response.data);\n            //let oneCompanyArray:CompanyDetails[] = []; \n            oneCustomerArray.push(response.data);\n            setName(oneCustomerArray[0].firstName);\n            store.dispatch(customerDownloadedAction(oneCustomerArray));\n        }\n        ).catch(error=>{console.log(error)});\n    })\n\n    return (\n        <div className=\"customerOpenPage\">\n\t\t\t<div className=\"discriptionCustomer\">\n                <div className=\"buneerTitle\">\n                HELLO {customerName} <br/>\n                </div>\n                <div className=\"aboutUsCustomer\">\n                    You are in your personal page.<br/>\n                    Here you can see all the coupons you purchased.<br/>\n                    To see all coupons details press on coupons tab.<br/>\n                    Also you can see your customer details.<br/>\n                    To see all details press on my details tab.<br/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default CustomerOpenPage;\n","import { Route, Switch } from \"react-router-dom\";\nimport CouponsListCustomer from \"../couponsListCustomer/couponsListCustomer\";\nimport CustomerDetailsComp from \"../customerDetailsComp/customerDetailsComp\";\nimport CustomerOpenPage from \"../customerOpenPage/customerOpenPage\";\nimport \"./customerRouting.css\";\n\nfunction CustomerRouting(): JSX.Element {\n    return (\n        <div className=\"customerRouting\">\n\t\t\t<Switch>\n                <Route path=\"/customer\" component={CustomerOpenPage} exact/>\n                <Route path=\"/allCustomerCoupons\" component={CouponsListCustomer} exact/>\n                <Route path=\"/customerDetails\" component={CustomerDetailsComp} exact/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default CustomerRouting;\n","import jwtDecode from \"jwt-decode\";\nimport { useEffect } from \"react\";\nimport { BrowserRouter, useHistory } from \"react-router-dom\";\nimport AuthenToken from \"../../model/AuthenToken\";\nimport { loginUserString } from \"../../redux/AuthState\";\nimport store from \"../../redux/store\";\nimport notify from \"../../utils/Notify\";\nimport CustomerAside from \"../customerAside/customerAside\";\nimport CustomerRouting from \"../customerRouting/customerRouting\";\nimport \"./layoutCustomer.css\";\n\nfunction LayoutCustomer(): JSX.Element {\n    var decoded: AuthenToken;\n    const history = useHistory();\n\n    useEffect(()=>{\n        decoded = jwtDecode(localStorage.getItem(\"token\"));\n\n        console.log(decoded.clientType);\n\n        if (decoded.clientType !== \"customer\"){\n           notify.error(\"You are not allowed to enter this page!!\")\n           history.push(\"/openPage\");    \n        }\n\n        store.dispatch(loginUserString(localStorage.getItem(\"token\")));\n        console.log(store.getState().authState.loginUser); \n    });\n\n    return (\n        <div className=\"layoutCustomer\">\n\t\t\t<BrowserRouter>\n                <header className=\"customerHeader\">\n                    <CustomerAside/>\n                </header>\n                <main className=\"customerMain\">\n                    <CustomerRouting/>\n                </main>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default LayoutCustomer;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport LoginAdmin from \"../../adminComponents/loginAdmin/loginAdmin\";\nimport LoginCompany from \"../../companyComponents/loginCompany/loginCompany\";\nimport LoginCustomer from \"../../customerComponents/loginCustomer/loginCustomer\";\nimport MainScreen from \"../mainScreen/mainScreen\";\nimport Page404 from \"../Page404/Page404\";\nimport LayoutAdminComp from \"../../adminComponents/layoutAdminComp/layoutAdminComp\";\nimport LayoutCompanyComp from \"../../companyComponents/layoutCompanyComp/layoutCompanyComp\";\nimport LayoutCustomer from \"../../customerComponents/layoutCustomer/layoutCustomer\";\n\n\nfunction Routing(): JSX.Element {\n    return (\n        <div className=\"Routing\">\n\t\t\t<Switch>\n                <Route path=\"/openPage\" component={MainScreen} exact/>\n                <Route path=\"/loginAdmin\" component={LoginAdmin} exact/>\n                <Route path=\"/loginCompany\" component={LoginCompany} exact/>\n                <Route path=\"/loginCustomer\" component={LoginCustomer} exact/>\n                <Route path=\"/administrator\" component={LayoutAdminComp} exact/>\n                <Route path=\"/company\" component={LayoutCompanyComp} exact/>\n                <Route path=\"/customer\" component={LayoutCustomer} exact/>\n                <Redirect from=\"/\" to=\"/openPage\" exact/>\n                <Route component={Page404}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routing;\n","import { BrowserRouter } from \"react-router-dom\";\nimport Footer from \"../footer/footer\";\nimport Header from \"../header/header\";\nimport Routing from \"../Routing/Routing\";\nimport \"./layout.css\";\nimport 'scrollable-component';\nimport globals from \"../../utils/Globals\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport store from \"../../redux/store\";\nimport { couponDownloadedAction } from \"../../redux/CouponState\";\n\nfunction Layout(): JSX.Element {\n    \n    const myUrl = globals.urls.guest + \"coupons/all\";\n    useEffect(()=>{\n        axios.get(myUrl)\n        .then(response => {\n            store.dispatch(couponDownloadedAction(response.data))\n        }).catch(error=>{\n            console.log(error)});\n    })\n\n    return (\n        <div className=\"layout\">\n            <BrowserRouter>\n                <header>\n                    <Header/>\n                </header>\n                <main className=\"mainLayout\">\n                    <Routing/>\n                </main>\n                <footer>\n                    <Footer/>\n                </footer>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default Layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Layout from './Components/mainLayout/layout/layout';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Layout />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}